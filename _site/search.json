[
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00.html",
    "href": "Hands-on_Ex/Hands-on_Ex00.html",
    "title": "Hands-on Exercise 0: Working with tidyverse",
    "section": "",
    "text": "Loading tidyverse into r environment by using the code chunk below.\n\npacman::p_load(tidyverse, psych)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608",
    "section": "",
    "text": "Welcome to Sindy‚Äôs playground for ISSS608 Visual Analytics and Applications.\n\nThe image? That‚Äôs just me bored when my code is running for like over an hour‚Ä¶"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hi there! I‚Äôm Sindy! üëã\nI‚Äôm excited to start my first course with Professor Kam Tin Seong. üéâ This is my first time using R and QuartoÔ∏è, and I can‚Äôt wait to dive into Visual Analytics and Applications.\nLooking forward to this journey and seeing where it takes me. üåàüåü"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex00.html#getting-started",
    "title": "Hands-on Exercise 0: Working with tidyverse",
    "section": "",
    "text": "Loading tidyverse into r environment by using the code chunk below.\n\npacman::p_load(tidyverse, psych)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex00.html#importing-data",
    "title": "Hands-on Exercise 0: Working with tidyverse",
    "section": "Importing data",
    "text": "Importing data\nThis is an outdated version.\n\nrealis_csv &lt;- read.csv(\"data/REALIS2019.csv\")\n\nCode chunk below uses uses read_csv() of readr to import REALIS2019.csv into r environment as a tibble data.frame.\nUse _ instead of . functions to prevent changes made to column names\n\nrealis2019 &lt;- read_csv(\"data/REALIS2019.csv\")\n\n\npopdata_fat &lt;- read_csv(\"data/PopData2019_fat.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00.html#pivoting-data",
    "href": "Hands-on_Ex/Hands-on_Ex00.html#pivoting-data",
    "title": "Hands-on Exercise 0: Working with tidyverse",
    "section": "Pivoting data",
    "text": "Pivoting data\n\n#! eval: FALSE\npopdata_long &lt;- popdata_fat %&gt;%\n  pivot_longer(c(3:21),\n               names_to = \"Age Group\",\n               values_to = \"Population\")\n\n\nMore pipes:\n\n#popdata_long &lt;- popdata_fat %&gt;%\n#  pivot_longer(c(3:21),\n#               names_to = \"Age Group\",\n#               values_to = \"Population\") %&gt;%\n#  select(\"Age Group\" == \"5_to_9\")\n\n\n# Filter the dataset for a specific Age Group, e.g., \"0_to_4\"\npopdata_filtered &lt;- popdata_long %&gt;%\n  filter(`Age Group` == \"0_to_4\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00.html#save-data",
    "href": "Hands-on_Ex/Hands-on_Ex00.html#save-data",
    "title": "Hands-on Exercise 0: Working with tidyverse",
    "section": "Save data",
    "text": "Save data\nrds: r native file format - always good to save as rds format\n\nwrite_rds(popdata_fat, \"data/rds/popdata_fat.rds\")\nwrite_rds(popdata_long, \"data/rds/popdata_long.rds\")\n\n{r, eval=FALSE}: only display code, does not run the code\n{r, echo=FALSE}: you run the code in the background, without displaying code"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00.html#working-with-dplyr",
    "href": "Hands-on_Ex/Hands-on_Ex00.html#working-with-dplyr",
    "title": "Hands-on Exercise 0: Working with tidyverse",
    "section": "Working with dplyr",
    "text": "Working with dplyr\n\nSelecting columns\n\nrealis2019_selected &lt;- realis2019 %&gt;%\n  select(`Project Name`,\n         `Transacted Price ($)`,\n         `Property Type`,\n         `Type of Sale`,\n         `Unit Price ($ psm)`)\n\n\n\nFiltering columns\n\nrealis2019_filtered &lt;- realis2019_selected %&gt;%\n  filter(`Property Type` == \"Condominium\" |\n           `Property Type` == \"Apartment\") %&gt;%\n  filter(`Type of Sale` == \"Resale\") %&gt;%\n  filter(`Unit Price ($ psm)` &lt;= 13000)\n\n\n\nCombining select and filter with pipe\nWe can also combine the above two operations into a single call.\n\nrealis2019_end &lt;- realis2019 %&gt;%\n  select(`Project Name`,\n         `Transacted Price ($)`,\n         `Property Type`,\n         `Type of Sale`,\n         `Unit Price ($ psm)`) %&gt;%\n  filter(`Property Type` == \"Condominium\" |\n           `Property Type` == \"Apartment\") %&gt;%\n  filter(`Type of Sale` == \"Resale\") %&gt;%\n  filter(`Unit Price ($ psm)` &lt;= 13000)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1: Working with tidyverse",
    "section": "",
    "text": "Loading tidyverse into r environment by using the code chunk below.\n\npacman::p_load(tidyverse, psych)\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\nYear end examination grades of a cohort of primary 3 students from a local school.\nThere are a total of seven attributes. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#getting-started",
    "title": "Hands-on Exercise 1: Working with tidyverse",
    "section": "",
    "text": "Loading tidyverse into r environment by using the code chunk below.\n\npacman::p_load(tidyverse, psych)\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\nYear end examination grades of a cohort of primary 3 students from a local school.\nThere are a total of seven attributes. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#importing-data",
    "title": "Hands-on Exercise 1: Working with tidyverse",
    "section": "2. Importing data",
    "text": "2. Importing data\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\nAbout the data\n\nYear end examination grades of a cohort of primary 3 students from a local school.\nThere are a total of seven attributes. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#r-graphics-vs-ggplot",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#r-graphics-vs-ggplot",
    "title": "Hands-on Exercise 1: Working with tidyverse",
    "section": "2. R Graphics VS ggplot",
    "text": "2. R Graphics VS ggplot\nFirst, let us compare how R Graphics, the core graphical functions of Base R and ggplot plot a simple histogram.\n\nR Graphicsggplot2\n\n\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#grammar-of-graphics",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#grammar-of-graphics",
    "title": "Hands-on Exercise 1: Working with tidyverse",
    "section": "3. Grammar of Graphics",
    "text": "3. Grammar of Graphics\nGrammar of Graphics defines the rules of structuring mathematical and aesthetic elements into a meaningful graph.\nThere are two principles in Grammar of Graphics, they are:\n\nGraphics = distinct layers of grammatical elements\nMeaningful plots through aesthetic mapping\n\nA good grammar of graphics will allow us to:\n\nGain insight into the composition of complicated graphics, and reveal unexpected connections between seemingly different graphics (Cox 1978).\nProvide a strong foundation for understanding a diverse range of graphics.\nGuide us on what a well-formed or correct graphic looks like.\n\nNote: there will still be many grammatically correct but nonsensical graphics."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-data",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-data",
    "title": "Hands-on Exercise 1: Working with tidyverse",
    "section": "4. Essential Grammatical Elements in ggplot2: data",
    "text": "4. Essential Grammatical Elements in ggplot2: data\n\nggplot(data=exam_data) # ggplot() initializes a ggplot object.\n# output:A blank canvas\n\n\n# Aesthetic mappings\nggplot(data=exam_data, \n       aes(x= MATHS))\n# output: ggplot that includes the x-axis and the axis‚Äôs label."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-geom",
    "href": "Hands-on_Ex/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-geom",
    "title": "Hands-on Exercise 1: Working with tidyverse",
    "section": "5. Essential Grammatical Elements in ggplot2: geom",
    "text": "5. Essential Grammatical Elements in ggplot2: geom\nGeometric objects are the actual marks we put on a plot. Examples include:\n\n\nA plot must have at least one geom; there is no upper limit. You can add a geom to a plot using the + operator.\nFor complete list, please refer to here."
  }
]