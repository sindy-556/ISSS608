{
  "hash": "2e7d8e8eb8df29e39622386b32730475",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 1: Examining Heart Attack Risk in Japan\"\nauthor: \"Sindy\"\ndate-modified: \"last-modified\"\noutput:\n  html_document:\n    css: styles.css\nexecute:\n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\n## Overview\n\nThe Heart Attack in Japan dataset is a research-centric compilation designed to investigate the epidemiology of heart attacks across different segments of the Japanese population. Japan, with its rapidly aging demographic and high standard of healthcare, presents a unique context where understanding the interplay between lifestyle, clinical parameters, and heart attack occurrence is critical.\n\n### Our task\n\nIn this exercise we will be: \n\n- Examining Heart Attack Occurrence: Analyze the distribution and determinants of heart attack events across the dataset. \n- Conducting Demographic Analysis: Investigate how age, gender, and region contribute to heart attack risk, distinguishing between younger and older cohorts.\n- Exploring Health Metrics: Visualize relationships between clinical indicators (e.g., BMI, blood pressure, cholesterol) and heart attack occurrence. \n- Assessing Lifestyle Factors: Evaluate the impact of lifestyle variables such as smoking history, physical activity, diet quality, alcohol consumption, and stress levels on heart health.\n\n## Getting started\n\n### Load packages\n\nWe load the following R packages using the `pacman::p_load()` function:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load all necessary packages at once\npacman::p_load(\n  tidyverse,      # Data wrangling, ggplot2\n  SmartEDA,       # EDA\n  easystats,      # check_model, check_collinearity\n  gtsummary,      # summary tables\n  reshape2,       # for melt\n  ggstatsplot,    # additional ggplot stats\n  caret,          # train/test split, modeling\n  yardstick,      # classification metrics\n  pROC,           # ROC/AUC\n  glmnet,         # regularized regression\n  randomForest,   # basic random forest\n  vip,            # variable importance plots\n  pdp,             # partial dependence plots\n  GGally,\n  ggmosaic, plotly, ggplot2, knitr, patchwork\n)\n```\n:::\n\n\n\n\n\nThis dataset contains information about heart attack occurrences in Japan, focusing on various demographic and health-related factors.\n\n### Import data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheart_data <- read_csv(\"./data/japan_heart_attack_dataset.csv\")\n```\n:::\n\n\n\n## Data pre-processing\n\n### Glimpse of data\nUsing the `glimpse()` function, we see that the dataset consists of 30,000 rows and 32 columns. The output displays the column names, their data types, and the first few entries for each variable. Additionally, there are 15 extra columns (Extra_Column_1 to Extra_Column_15) which are not clearly defined.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(heart_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 30,000\nColumns: 32\n$ Age                     <dbl> 56, 69, 46, 32, 60, 25, 78, 38, 56, 75, 36, 40…\n$ Gender                  <chr> \"Male\", \"Male\", \"Male\", \"Female\", \"Female\", \"F…\n$ Region                  <chr> \"Urban\", \"Urban\", \"Rural\", \"Urban\", \"Rural\", \"…\n$ Smoking_History         <chr> \"Yes\", \"No\", \"Yes\", \"No\", \"No\", \"No\", \"No\", \"Y…\n$ Diabetes_History        <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Yes\", \"No…\n$ Hypertension_History    <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Yes\", \"No…\n$ Cholesterol_Level       <dbl> 186.4002, 185.1367, 210.6966, 211.1655, 223.81…\n$ Physical_Activity       <chr> \"Moderate\", \"Low\", \"Low\", \"Moderate\", \"High\", …\n$ Diet_Quality            <chr> \"Poor\", \"Good\", \"Average\", \"Good\", \"Good\", \"Go…\n$ Alcohol_Consumption     <chr> \"Low\", \"Low\", \"Moderate\", \"High\", \"High\", \"Hig…\n$ Stress_Levels           <dbl> 3.644786, 3.384056, 3.810911, 6.014878, 6.8068…\n$ BMI                     <dbl> 33.96135, 28.24287, 27.60121, 23.71729, 19.771…\n$ Heart_Rate              <dbl> 72.30153, 57.45764, 64.65870, 55.13147, 76.667…\n$ Systolic_BP             <dbl> 123.90209, 129.89331, 145.65490, 131.78522, 10…\n$ Diastolic_BP            <dbl> 85.68281, 73.52426, 71.99481, 68.21133, 92.902…\n$ Family_History          <chr> \"No\", \"Yes\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ Heart_Attack_Occurrence <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\"…\n$ Extra_Column_1          <dbl> 0.40498852, 0.03627815, 0.85297888, 0.39085280…\n$ Extra_Column_2          <dbl> 0.43330004, 0.51256694, 0.21959083, 0.29684675…\n$ Extra_Column_3          <dbl> 0.62871236, 0.66839275, 0.61343656, 0.15572404…\n$ Extra_Column_4          <dbl> 0.70160955, 0.11552874, 0.50800995, 0.87025144…\n$ Extra_Column_5          <dbl> 0.49814235, 0.42381938, 0.90066981, 0.39035591…\n$ Extra_Column_6          <dbl> 0.007901312, 0.083932768, 0.227205241, 0.40318…\n$ Extra_Column_7          <dbl> 0.79458257, 0.68895108, 0.49634358, 0.74140891…\n$ Extra_Column_8          <dbl> 0.29077922, 0.83016364, 0.75210679, 0.22396813…\n$ Extra_Column_9          <dbl> 0.49719307, 0.63449028, 0.18150125, 0.32931387…\n$ Extra_Column_10         <dbl> 0.52199452, 0.30204337, 0.62918031, 0.14319054…\n$ Extra_Column_11         <dbl> 0.79965663, 0.04368285, 0.01827617, 0.90778075…\n$ Extra_Column_12         <dbl> 0.72239788, 0.45166789, 0.06322702, 0.54232201…\n$ Extra_Column_13         <dbl> 0.1487387, 0.8786714, 0.1465122, 0.9224606, 0.…\n$ Extra_Column_14         <dbl> 0.8340099, 0.5356022, 0.9972962, 0.6262165, 0.…\n$ Extra_Column_15         <dbl> 0.061632229, 0.617825340, 0.974455410, 0.22860…\n```\n\n\n:::\n:::\n\n\n\nThe following provides an overview of the Japan Heart Attack dataset using the `ExpData()` function, summarizing both overall and variable-level details. \n\n::: panel-tabset\n### Overall data summary\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary1 <- heart_data %>%\n  ExpData(type = 1)\n\n# Display the summary (further customization possible)\nsummary1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                          Descriptions     Value\n1                                   Sample size (nrow)     30000\n2                              No. of variables (ncol)        32\n3                    No. of numeric/interger variables        22\n4                              No. of factor variables         0\n5                                No. of text variables        10\n6                             No. of logical variables         0\n7                          No. of identifier variables        20\n8                                No. of date variables         0\n9             No. of zero variance variables (uniform)         0\n10               %. of variables having complete cases 100% (32)\n11   %. of variables having >0% and <50% missing cases    0% (0)\n12 %. of variables having >=50% and <90% missing cases    0% (0)\n13          %. of variables having >=90% missing cases    0% (0)\n```\n\n\n:::\n:::\n\n\n\n### Variable level summary\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary2 <- heart_data %>%\n  ExpData(type = 2)\n\n# Display the summary (further customization possible)\nsummary2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Index           Variable_Name Variable_Type Sample_n Missing_Count\n1      1                     Age       numeric    30000             0\n2      2                  Gender     character    30000             0\n3      3                  Region     character    30000             0\n4      4         Smoking_History     character    30000             0\n5      5        Diabetes_History     character    30000             0\n6      6    Hypertension_History     character    30000             0\n7      7       Cholesterol_Level       numeric    30000             0\n8      8       Physical_Activity     character    30000             0\n9      9            Diet_Quality     character    30000             0\n10    10     Alcohol_Consumption     character    30000             0\n11    11           Stress_Levels       numeric    30000             0\n12    12                     BMI       numeric    30000             0\n13    13              Heart_Rate       numeric    30000             0\n14    14             Systolic_BP       numeric    30000             0\n15    15            Diastolic_BP       numeric    30000             0\n16    16          Family_History     character    30000             0\n17    17 Heart_Attack_Occurrence     character    30000             0\n18    18          Extra_Column_1       numeric    30000             0\n19    19          Extra_Column_2       numeric    30000             0\n20    20          Extra_Column_3       numeric    30000             0\n21    21          Extra_Column_4       numeric    30000             0\n22    22          Extra_Column_5       numeric    30000             0\n23    23          Extra_Column_6       numeric    30000             0\n24    24          Extra_Column_7       numeric    30000             0\n25    25          Extra_Column_8       numeric    30000             0\n26    26          Extra_Column_9       numeric    30000             0\n27    27         Extra_Column_10       numeric    30000             0\n28    28         Extra_Column_11       numeric    30000             0\n29    29         Extra_Column_12       numeric    30000             0\n30    30         Extra_Column_13       numeric    30000             0\n31    31         Extra_Column_14       numeric    30000             0\n32    32         Extra_Column_15       numeric    30000             0\n   Per_of_Missing No_of_distinct_values\n1               0                    62\n2               0                     2\n3               0                     2\n4               0                     2\n5               0                     2\n6               0                     2\n7               0                 30000\n8               0                     3\n9               0                     3\n10              0                     4\n11              0                 29613\n12              0                 30000\n13              0                 30000\n14              0                 30000\n15              0                 30000\n16              0                     2\n17              0                     2\n18              0                 30000\n19              0                 30000\n20              0                 30000\n21              0                 30000\n22              0                 30000\n23              0                 30000\n24              0                 30000\n25              0                 30000\n26              0                 30000\n27              0                 30000\n28              0                 30000\n29              0                 30000\n30              0                 30000\n31              0                 30000\n32              0                 30000\n```\n\n\n:::\n:::\n\n\n\n:::\n\n### Convert categorical variables to factors\n\nFrom the overview above, we see that the dataset contains no missing values, and the categorical variables have a maximum of 4 unique values. Converting these variables into factors ensures they are correctly treated as categorical data during analysis and visualization.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convert selected categorical variables into factors\nheart_data <- heart_data %>%\n  mutate(\n    Gender = as.factor(Gender),\n    Region = as.factor(Region),\n    Smoking_History = as.factor(Smoking_History),\n    Diabetes_History = as.factor(Diabetes_History),\n    Hypertension_History = as.factor(Hypertension_History),\n    Physical_Activity = as.factor(Physical_Activity),\n    Diet_Quality = as.factor(Diet_Quality),\n    Alcohol_Consumption = as.factor(Alcohol_Consumption),\n    Family_History = as.factor(Family_History),\n    Heart_Attack_Occurrence = as.factor(Heart_Attack_Occurrence)\n  )\n```\n:::\n\n\n\n### Drop extra columns\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Select only the Extra_Columns and the outcome variable\nextra_data <- heart_data %>%\n  select(starts_with(\"Extra_Column_\"), Heart_Attack_Occurrence)\n\n# Reshape to long format\nextra_data_long <- melt(extra_data, id.vars = \"Heart_Attack_Occurrence\")\n\n# Create boxplots comparing each Extra_Column by Heart_Attack_Occurrence\nggplot(extra_data_long, aes(x = Heart_Attack_Occurrence, y = value)) +\n  geom_boxplot() +\n  facet_wrap(~ variable, scales = \"free\") +\n  labs(\n    title = \"Distribution of Extra Columns by Heart Attack Occurrence\",\n    x = \"Heart Attack Occurrence\",\n    y = \"Value\"\n  )\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-7-1.png){width=1152}\n:::\n:::\n\n\nSince these variables do not appear to vary by heart attack status, they are unlikely to provide useful information for any downstream analysis (e.g., modeling, hypothesis testing). Dropping them will simplify the dataset and help focus on variables that do relate to heart attack risk. \n\nWe can drop them with the following code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheart_data <- heart_data %>%\n  select(-starts_with(\"Extra_Column_\"))\n```\n:::\n\n\n\n\n### Cleaned dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(heart_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 30,000\nColumns: 17\n$ Age                     <dbl> 56, 69, 46, 32, 60, 25, 78, 38, 56, 75, 36, 40…\n$ Gender                  <fct> Male, Male, Male, Female, Female, Female, Male…\n$ Region                  <fct> Urban, Urban, Rural, Urban, Rural, Rural, Urba…\n$ Smoking_History         <fct> Yes, No, Yes, No, No, No, No, Yes, No, No, No,…\n$ Diabetes_History        <fct> No, No, No, No, No, No, Yes, No, No, No, No, N…\n$ Hypertension_History    <fct> No, No, No, No, No, No, Yes, No, Yes, No, Yes,…\n$ Cholesterol_Level       <dbl> 186.4002, 185.1367, 210.6966, 211.1655, 223.81…\n$ Physical_Activity       <fct> Moderate, Low, Low, Moderate, High, Low, High,…\n$ Diet_Quality            <fct> Poor, Good, Average, Good, Good, Good, Poor, P…\n$ Alcohol_Consumption     <fct> Low, Low, Moderate, High, High, High, High, No…\n$ Stress_Levels           <dbl> 3.644786, 3.384056, 3.810911, 6.014878, 6.8068…\n$ BMI                     <dbl> 33.96135, 28.24287, 27.60121, 23.71729, 19.771…\n$ Heart_Rate              <dbl> 72.30153, 57.45764, 64.65870, 55.13147, 76.667…\n$ Systolic_BP             <dbl> 123.90209, 129.89331, 145.65490, 131.78522, 10…\n$ Diastolic_BP            <dbl> 85.68281, 73.52426, 71.99481, 68.21133, 92.902…\n$ Family_History          <fct> No, Yes, No, No, No, No, No, No, No, Yes, Yes,…\n$ Heart_Attack_Occurrence <fct> No, No, No, No, No, No, No, No, Yes, No, No, N…\n```\n\n\n:::\n:::\n\n\n## Exploratory visuals \n\n### Create new variables\n\nWe create a new variable, `Age_Group`, classifying individuals as “Over50” or “50OrBelow” to compare younger vs. older individuals.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheart_data_eda <- heart_data %>%\n  mutate(Age_Group = ifelse(Age > 50, \"Over50\", \"50OrBelow\") %>% as.factor())\n```\n:::\n\n\n\n\nWe create `AgeGender` by combining the `Age_Group` and `gender`. We also combine `smoking status` and `physical activity` into `SmokeAct` and reorder `alcohol consumption` levels.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Demographic variables\nheart_data_eda <- heart_data_eda %>%\n  mutate(\n    AgeGender = case_when(\n      Age_Group == \"Over50\" & Gender == \"Male\"   ~ \"Over 50 Male\",\n      Age_Group == \"Over50\" & Gender == \"Female\" ~ \"Over 50 Female\",\n      Age_Group == \"50OrBelow\" & Gender == \"Male\"   ~ \"≤50 Male\",\n      Age_Group == \"50OrBelow\" & Gender == \"Female\" ~ \"≤50 Female\"\n    ) %>% factor(levels = c(\"≤50 Female\",\"≤50 Male\",\"Over 50 Female\",\"Over 50 Male\"))\n  )\n\n# Lifestyle variables\nheart_data_eda <- heart_data_eda %>%\n  mutate(\n    SmokeAct = case_when(\n      Smoking_History == \"Yes\" & Physical_Activity == \"Low\"      ~ \"Smoker, PA:Low\",\n      Smoking_History == \"Yes\" & Physical_Activity == \"Moderate\" ~ \"Smoker, PA:Mod\",\n      Smoking_History == \"Yes\" & Physical_Activity == \"High\"     ~ \"Smoker, PA:High\",\n      Smoking_History == \"No\"  & Physical_Activity == \"Low\"      ~ \"Non-Smoker, PA:Low\",\n      Smoking_History == \"No\"  & Physical_Activity == \"Moderate\" ~ \"Non-Smoker, PA:Mod\",\n      Smoking_History == \"No\"  & Physical_Activity == \"High\"     ~ \"Non-Smoker, PA:High\"\n    ) %>% \n    # Order them in a sensible sequence:\n    factor(levels = c(\"Non-Smoker, PA:Low\",\"Non-Smoker, PA:Mod\",\"Non-Smoker, PA:High\",\n                      \"Smoker, PA:Low\",\"Smoker, PA:Mod\",\"Smoker, PA:High\"))\n  )\n```\n:::\n\n\n\n\n### Mosaic Plot: Demographic Analysis\nWe plot a mosaic where `AgeGender` is on the x-axis, color indicates heart attack occurrence, and each facet represents a different region.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_demo <- ggplot(heart_data_eda) +\n  geom_mosaic(\n    aes(x = product(AgeGender),\n        fill = Heart_Attack_Occurrence,\n        text = paste0(\"Group: \", AgeGender,\n                      \"<br>Region: \", Region,\n                      \"<br>Heart Attack: \", Heart_Attack_Occurrence)\n    ),\n    alpha = 0.9\n  ) +\n  facet_wrap(~ Region) +\n  scale_fill_manual(values = c(\"No\" = \"#F1B1B5\", \"Yes\" = \"#97B3AE\")) +\n  labs(\n    title = \"Demographic Mosaic: Age & Gender by Region vs. Heart Attack\",\n    x     = \"Age & Gender\",\n    y     = \" \",\n    fill  = \"Heart Attack\"\n  ) +\n  theme_minimal()\n\np_demo\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-12-1.png){width=1152}\n:::\n:::\n\n\n##### Explanation of the plot\n\nThis mosaic plot illustrates heart attack occurrences across different age and gender groups within rural and urban regions. The width of each bar segment corresponds to the relative size of that demographic group, while the height indicates the proportion of individuals who experienced a heart attack. \n\nOverall, heart attack rates remain relatively consistent between rural and urban areas. However, males tend to have a higher probability of heart attack than females, regardless of age or region.\n\n\n### Mosaic plot: Lifestyle factors\n\nWe create a mosaic plot with `SmokeAct` on the x-axis, color by heart attack occurrence, and facet by the four alcohol consumption levels.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Reorder factor levels for Alcohol_Consumption\nheart_data_eda <- heart_data_eda %>%\n  mutate(\n    Alcohol_Consumption = factor(\n      Alcohol_Consumption,\n      levels = c(\"High\", \"Moderate\", \"Low\", \"None\")\n    )\n  )\n\nggplot(heart_data_eda) +\n  geom_mosaic(aes(\n    x    = product(SmokeAct),\n    fill = Heart_Attack_Occurrence\n  ), alpha = 0.9) +\n  facet_wrap(~ Alcohol_Consumption, ncol = 2) +\n  scale_fill_manual(values = c(\"No\" = \"#F1B1B5\", \"Yes\" = \"#97B3AE\")) +\n  labs(\n    title = \"Lifestyle Mosaic: Smoking, Activity, and Alcohol vs. Heart Attack\",\n    subtitle = \"PA = Physical Activity. Each facet represents a different Alcohol Consumption level.\",\n    x = \"Smoking & PA Group\",\n    y = \"\",\n    fill = \"Heart Attack\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title    = element_text(face = \"bold\", size = 14, hjust=0.5),\n    plot.subtitle = element_text(size = 10, hjust=0.5),\n    strip.text    = element_text(face=\"bold\"),\n    axis.text.x   = element_text(angle=40, hjust=1, size=7),\n    panel.spacing = unit(2, \"lines\")\n  )\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n\n##### Explanation of the plot\n\n\nThis mosaic plot explores how smoking, physical activity (PA), and alcohol consumption interact to influence heart attack occurrences. Each facet represents a different alcohol consumption level (High, Moderate, Low, None).\n\nInterestingly, non-smokers who report no alcohol consumption but high physical activity exhibit one of the highest heart attack rates. Additionally, smokers with moderate physical activity tend to have higher heart attack rates compared to smokers with low or high physical activity.\n\n### Pairwise numeric plot (Health metrics)\nThis code uses `ggpairs()` to create a matrix of pairwise plots for all numeric variables in heart_data. The `mapping = aes(color = Heart_Attack_Occurrence)` argument adds a color-coded grouping by heart attack status.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Automatically select all numeric columns from the dataset\nnumeric_cols <- sapply(heart_data, is.numeric)\n\npairwise_plot <- ggpairs(\n  data = heart_data,\n  columns = which(numeric_cols),\n  mapping = aes(color = Heart_Attack_Occurrence),\n  lower = list(continuous = wrap(\"smooth\", alpha = 0.3, size = 0.5)),\n  diag = list(continuous = wrap(\"densityDiag\", alpha = 0.5)),\n  upper = list(continuous = wrap(\"cor\", size = 4))\n) +\n  ggtitle(\"Pairwise Correlations Among All Numeric Metrics\")\n\npairwise_plot\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n\n##### Explanation of the plot\n\nThis grid compares health metrics like BMI, blood pressure, cholesterol, and stress. The **diagonal panels** show density curves for each variable, revealing, for instance, that `Age` has a broader distribution compared to the other variables.\n\nThe **upper panels** list correlation coefficients and their significance, most of which are near zero (e.g., **`Corr: 0.025, 0.048`**), indicating that these variables do not strongly co-vary. In the **lower scatter plots**, points are colored by heart attack occurrence; no tight clustering suggests no single numeric threshold exclusively separates “Yes” vs. “No.” For instance, `Systolic_BP` and `Diastolic_BP` show little correlation as high `Systolic_BP` often coexists with both high and low `Diastolic_BP`. Overall, **no single numeric factor** stands out as a strictly linear driver of heart attack, though there may be subtle nonlinear or interactive effects to explore later.\n\n\n## Train test split\n\nBefore building a predictive model, it is best practice to split the data into training and testing sets. The `createDataPartition` function ensures that the distribution of the target class is approximately the same in both sets. Here, we allocate 80% of the data for training and 20% for testing.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\n\ntrain_index <- createDataPartition(heart_data$Heart_Attack_Occurrence, p = 0.8, list = FALSE)\n\ntrain_data <- heart_data[train_index, ]\ntest_data  <- heart_data[-train_index, ]\n```\n:::\n\n\n\n\n## Naive logistic regression\n\nHere, we build an initial (“naive”) logistic regression model that includes **all** available predictors (except the 15 “Extra_Column” variables we dropped). This approach gives us a baseline.\n\n\n### Fit the model\n\nWe will fit a logistic regression using `glm()`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Use a standard glm with all predictors\nnaive_glm <- glm(\n  Heart_Attack_Occurrence ~ .,\n  data   = train_data,\n  family = binomial\n)\n```\n:::\n\n\n\n\n### Understanding the model\n\nWe use `check_collinearity()` to see if any variables are highly correlated or cause near‐complete separation. A “good” logistic regression typically avoids extremely high VIFs or indefinite confidence intervals.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Capture the output\nresult <- check_collinearity(naive_glm)\n\n# Coerce to a data frame\ndf <- as.data.frame(result)\n\n# Use knitr::kable to print the table neatly\nknitr::kable(df, caption = \"Check for Multicollinearity\", \n             format = \"html\", \n             table.attr = \"style='width:100%; white-space:nowrap;'\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table style='width:100%; white-space:nowrap;'>\n<caption>Check for Multicollinearity</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Term </th>\n   <th style=\"text-align:right;\"> VIF </th>\n   <th style=\"text-align:right;\"> VIF_CI_low </th>\n   <th style=\"text-align:right;\"> VIF_CI_high </th>\n   <th style=\"text-align:right;\"> SE_factor </th>\n   <th style=\"text-align:right;\"> Tolerance </th>\n   <th style=\"text-align:right;\"> Tolerance_CI_low </th>\n   <th style=\"text-align:right;\"> Tolerance_CI_high </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Age </td>\n   <td style=\"text-align:right;\"> 1.001325 </td>\n   <td style=\"text-align:right;\"> 1.000000 </td>\n   <td style=\"text-align:right;\"> 1.991615e+01 </td>\n   <td style=\"text-align:right;\"> 1.000662 </td>\n   <td style=\"text-align:right;\"> 0.9986771 </td>\n   <td style=\"text-align:right;\"> 0.0502105 </td>\n   <td style=\"text-align:right;\"> 0.9999999 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Gender </td>\n   <td style=\"text-align:right;\"> 1.000943 </td>\n   <td style=\"text-align:right;\"> 1.000000 </td>\n   <td style=\"text-align:right;\"> 6.378053e+02 </td>\n   <td style=\"text-align:right;\"> 1.000472 </td>\n   <td style=\"text-align:right;\"> 0.9990575 </td>\n   <td style=\"text-align:right;\"> 0.0015679 </td>\n   <td style=\"text-align:right;\"> 1.0000000 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Region </td>\n   <td style=\"text-align:right;\"> 1.000670 </td>\n   <td style=\"text-align:right;\"> 1.000000 </td>\n   <td style=\"text-align:right;\"> 1.062715e+05 </td>\n   <td style=\"text-align:right;\"> 1.000335 </td>\n   <td style=\"text-align:right;\"> 0.9993302 </td>\n   <td style=\"text-align:right;\"> 0.0000094 </td>\n   <td style=\"text-align:right;\"> 1.0000000 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Smoking_History </td>\n   <td style=\"text-align:right;\"> 1.000446 </td>\n   <td style=\"text-align:right;\"> 1.000000 </td>\n   <td style=\"text-align:right;\"> 9.589080e+08 </td>\n   <td style=\"text-align:right;\"> 1.000223 </td>\n   <td style=\"text-align:right;\"> 0.9995547 </td>\n   <td style=\"text-align:right;\"> 0.0000000 </td>\n   <td style=\"text-align:right;\"> 1.0000000 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Diabetes_History </td>\n   <td style=\"text-align:right;\"> 1.001228 </td>\n   <td style=\"text-align:right;\"> 1.000000 </td>\n   <td style=\"text-align:right;\"> 3.808479e+01 </td>\n   <td style=\"text-align:right;\"> 1.000614 </td>\n   <td style=\"text-align:right;\"> 0.9987733 </td>\n   <td style=\"text-align:right;\"> 0.0262572 </td>\n   <td style=\"text-align:right;\"> 1.0000000 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Hypertension_History </td>\n   <td style=\"text-align:right;\"> 1.000834 </td>\n   <td style=\"text-align:right;\"> 1.000000 </td>\n   <td style=\"text-align:right;\"> 3.250209e+03 </td>\n   <td style=\"text-align:right;\"> 1.000417 </td>\n   <td style=\"text-align:right;\"> 0.9991664 </td>\n   <td style=\"text-align:right;\"> 0.0003077 </td>\n   <td style=\"text-align:right;\"> 1.0000000 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Cholesterol_Level </td>\n   <td style=\"text-align:right;\"> 1.000587 </td>\n   <td style=\"text-align:right;\"> 1.000000 </td>\n   <td style=\"text-align:right;\"> 1.351909e+06 </td>\n   <td style=\"text-align:right;\"> 1.000293 </td>\n   <td style=\"text-align:right;\"> 0.9994134 </td>\n   <td style=\"text-align:right;\"> 0.0000007 </td>\n   <td style=\"text-align:right;\"> 1.0000000 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Physical_Activity </td>\n   <td style=\"text-align:right;\"> 1.001852 </td>\n   <td style=\"text-align:right;\"> 1.000002 </td>\n   <td style=\"text-align:right;\"> 2.745436e+00 </td>\n   <td style=\"text-align:right;\"> 1.000926 </td>\n   <td style=\"text-align:right;\"> 0.9981510 </td>\n   <td style=\"text-align:right;\"> 0.3642408 </td>\n   <td style=\"text-align:right;\"> 0.9999980 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Diet_Quality </td>\n   <td style=\"text-align:right;\"> 1.001445 </td>\n   <td style=\"text-align:right;\"> 1.000000 </td>\n   <td style=\"text-align:right;\"> 1.030279e+01 </td>\n   <td style=\"text-align:right;\"> 1.000722 </td>\n   <td style=\"text-align:right;\"> 0.9985567 </td>\n   <td style=\"text-align:right;\"> 0.0970611 </td>\n   <td style=\"text-align:right;\"> 0.9999998 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Alcohol_Consumption </td>\n   <td style=\"text-align:right;\"> 1.002116 </td>\n   <td style=\"text-align:right;\"> 1.000005 </td>\n   <td style=\"text-align:right;\"> 1.852209e+00 </td>\n   <td style=\"text-align:right;\"> 1.001057 </td>\n   <td style=\"text-align:right;\"> 0.9978885 </td>\n   <td style=\"text-align:right;\"> 0.5398958 </td>\n   <td style=\"text-align:right;\"> 0.9999947 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Stress_Levels </td>\n   <td style=\"text-align:right;\"> 1.000919 </td>\n   <td style=\"text-align:right;\"> 1.000000 </td>\n   <td style=\"text-align:right;\"> 8.893873e+02 </td>\n   <td style=\"text-align:right;\"> 1.000459 </td>\n   <td style=\"text-align:right;\"> 0.9990821 </td>\n   <td style=\"text-align:right;\"> 0.0011244 </td>\n   <td style=\"text-align:right;\"> 1.0000000 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> BMI </td>\n   <td style=\"text-align:right;\"> 1.000849 </td>\n   <td style=\"text-align:right;\"> 1.000000 </td>\n   <td style=\"text-align:right;\"> 2.561245e+03 </td>\n   <td style=\"text-align:right;\"> 1.000424 </td>\n   <td style=\"text-align:right;\"> 0.9991522 </td>\n   <td style=\"text-align:right;\"> 0.0003904 </td>\n   <td style=\"text-align:right;\"> 1.0000000 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Heart_Rate </td>\n   <td style=\"text-align:right;\"> 1.000834 </td>\n   <td style=\"text-align:right;\"> 1.000000 </td>\n   <td style=\"text-align:right;\"> 3.252876e+03 </td>\n   <td style=\"text-align:right;\"> 1.000417 </td>\n   <td style=\"text-align:right;\"> 0.9991665 </td>\n   <td style=\"text-align:right;\"> 0.0003074 </td>\n   <td style=\"text-align:right;\"> 1.0000000 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Systolic_BP </td>\n   <td style=\"text-align:right;\"> 1.000939 </td>\n   <td style=\"text-align:right;\"> 1.000000 </td>\n   <td style=\"text-align:right;\"> 6.753992e+02 </td>\n   <td style=\"text-align:right;\"> 1.000469 </td>\n   <td style=\"text-align:right;\"> 0.9990618 </td>\n   <td style=\"text-align:right;\"> 0.0014806 </td>\n   <td style=\"text-align:right;\"> 1.0000000 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Diastolic_BP </td>\n   <td style=\"text-align:right;\"> 1.000920 </td>\n   <td style=\"text-align:right;\"> 1.000000 </td>\n   <td style=\"text-align:right;\"> 8.726101e+02 </td>\n   <td style=\"text-align:right;\"> 1.000460 </td>\n   <td style=\"text-align:right;\"> 0.9990807 </td>\n   <td style=\"text-align:right;\"> 0.0011460 </td>\n   <td style=\"text-align:right;\"> 1.0000000 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Family_History </td>\n   <td style=\"text-align:right;\"> 1.000826 </td>\n   <td style=\"text-align:right;\"> 1.000000 </td>\n   <td style=\"text-align:right;\"> 3.716482e+03 </td>\n   <td style=\"text-align:right;\"> 1.000413 </td>\n   <td style=\"text-align:right;\"> 0.9991743 </td>\n   <td style=\"text-align:right;\"> 0.0002691 </td>\n   <td style=\"text-align:right;\"> 1.0000000 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n#### Interpreting the collinearity results\n\n- VIF ~1.0 but extremely large upper confidence bounds: This indicates the algorithm is unsure about the exact magnitude of possible collinearity. In simpler terms, the model’s variance–covariance matrix is nearly singular.\n- This often happens when:\n  - Quasi‐complete separation: Certain variables or combinations nearly “perfectly” predict the outcome.\n  - Imbalance in the dataset (many more “No” than “Yes”) plus insufficient signal in some predictors.\n  - Over‐parametrization: Too many correlated predictors for the sample size.\n\n### Model performance\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1) Collinearity plot\ncheck_c <- check_collinearity(naive_glm)\np_collinearity <- plot(check_c) +\n  theme(axis.text.x = element_text(angle = 40, hjust = 1))\n\n# 2) Confusion matrix heatmap\npred_prob_naive <- predict(naive_glm, newdata = test_data, type = \"response\")\n\npred_class_naive <- ifelse(pred_prob_naive >= 0.5, \"Yes\", \"No\") %>%\n  factor(levels = levels(test_data$Heart_Attack_Occurrence))\n\n# Evaluate\nnaive_results <- data.frame(\n  obs   = test_data$Heart_Attack_Occurrence,\n  pred  = pred_class_naive,\n  prob  = pred_prob_naive\n)\n\nnaive_cm <- naive_results %>%\n  conf_mat(obs, pred)\n\np_confmat <- autoplot(naive_cm, type = \"heatmap\") +\n  labs(title = \"Naive Logistic Regression: Confusion Matrix\")\n\n# 3) ROC curve as a ggplot object using ggroc()\nroc_naive <- roc(\n  response  = as.numeric(naive_results$obs),\n  predictor = as.numeric(naive_results$prob)\n)\n\np_roc <- ggroc(roc_naive, colour = \"#1c61b6\", legacy.axes = TRUE) +\n  labs(title = \"ROC Curve: Naïve Logistic Model\") +\n  theme_minimal()\n\n\ncombined_plot <- p_collinearity / (p_confmat + p_roc)\n\n# Display the combined plot\ncombined_plot\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-18-1.png){width=960}\n:::\n:::\n\n\n\n#### Explanation of the plot\n\n1. **Collinearity Plot:**  \n  - This bar chart displays VIF estimates, where the ideal values fall in the green region.\n  - Individual VIF point estimates hover around 1.0, but their upper confidence intervals extend into the red, indicating extremely high values. \n  - This suggests that the model’s parameter estimates are unstable due to quasi‐complete separation or an excess of correlated predictors relative to the sample size. In essence, the model cannot reliably discern each variable’s true contribution, leading to artificially low VIF point estimates paired with massive uncertainty bounds.\n\n2. **Confusion Matrix:**  \n  - The matrix shows 0 true positives. \n  - This is typical when a logistic model either encounters near-complete separation or opts to disregard the minority class in imbalanced datasets.\n\n3. **ROC Curve:**  \n  - The ROC curve lies near the diagonal reference line, confirming that the model lacks predictive power and is essentially guessing.\n\n\n\n\n\n\n\n\n\n\n\n",
    "supporting": [
      "Take-home_Ex1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}