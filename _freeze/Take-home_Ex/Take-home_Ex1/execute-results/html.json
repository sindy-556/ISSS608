{
  "hash": "3040c515b3aee8be183ee9b41cc75134",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 1: Examining Heart Attack Risk in Japan\"\nauthor: \"Sindy\"\ndate-modified: \"last-modified\"\noutput:\n  html_document:\n    css: styles.css\nexecute:\n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\n## Overview\n\nThe Heart Attack in Japan dataset is a research-centric compilation designed to investigate the epidemiology of heart attacks across different segments of the Japanese population. Japan, with its rapidly aging demographic and high standard of healthcare, presents a unique context where understanding the interplay between lifestyle, clinical parameters, and heart attack occurrence is critical.\n\n### Our task\n\nIn this exercise we will be: \n\n- Examining Heart Attack Occurrence: Analyze the distribution and determinants of heart attack events across the dataset. \n- Conducting Demographic Analysis: Investigate how age, gender, and region contribute to heart attack risk, distinguishing between younger and older cohorts.\n- Exploring Health Metrics: Visualize relationships between clinical indicators (e.g., BMI, blood pressure, cholesterol) and heart attack occurrence. \n- Assessing Lifestyle Factors: Evaluate the impact of lifestyle variables such as smoking history, physical activity, diet quality, alcohol consumption, and stress levels on heart health.\n\n## Getting started\n\n### Load packages\n\nWe load the following R packages using the `pacman::p_load()` function:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load all necessary packages at once\npacman::p_load(\n  tidyverse,      # Data wrangling, ggplot2\n  SmartEDA,       # EDA\n  easystats,      # check_model, check_collinearity\n  gtsummary,      # summary tables\n  reshape2,       # for melt\n  ggstatsplot,    # additional ggplot stats\n  caret,          # train/test split, modeling\n  yardstick,      # classification metrics\n  pROC,           # ROC/AUC\n  glmnet,         # regularized regression\n  randomForest,   # basic random forest\n  vip,            # variable importance plots\n  pdp,             # partial dependence plots\n  GGally,\n  ggmosaic, plotly, ggplot2\n)\n```\n:::\n\n\n\n\n\nThis dataset contains information about heart attack occurrences in Japan, focusing on various demographic and health-related factors.\n\n### Import data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheart_data <- read_csv(\"./data/japan_heart_attack_dataset.csv\")\n```\n:::\n\n\n\n## Data pre-processing\n\n### Glimpse of data\nUsing the `glimpse()` function, we see that the dataset consists of 30,000 rows and 32 columns. The output displays the column names, their data types, and the first few entries for each variable. Additionally, there are 15 extra columns (Extra_Column_1 to Extra_Column_15) which are not clearly defined.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(heart_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 30,000\nColumns: 32\n$ Age                     <dbl> 56, 69, 46, 32, 60, 25, 78, 38, 56, 75, 36, 40…\n$ Gender                  <chr> \"Male\", \"Male\", \"Male\", \"Female\", \"Female\", \"F…\n$ Region                  <chr> \"Urban\", \"Urban\", \"Rural\", \"Urban\", \"Rural\", \"…\n$ Smoking_History         <chr> \"Yes\", \"No\", \"Yes\", \"No\", \"No\", \"No\", \"No\", \"Y…\n$ Diabetes_History        <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Yes\", \"No…\n$ Hypertension_History    <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Yes\", \"No…\n$ Cholesterol_Level       <dbl> 186.4002, 185.1367, 210.6966, 211.1655, 223.81…\n$ Physical_Activity       <chr> \"Moderate\", \"Low\", \"Low\", \"Moderate\", \"High\", …\n$ Diet_Quality            <chr> \"Poor\", \"Good\", \"Average\", \"Good\", \"Good\", \"Go…\n$ Alcohol_Consumption     <chr> \"Low\", \"Low\", \"Moderate\", \"High\", \"High\", \"Hig…\n$ Stress_Levels           <dbl> 3.644786, 3.384056, 3.810911, 6.014878, 6.8068…\n$ BMI                     <dbl> 33.96135, 28.24287, 27.60121, 23.71729, 19.771…\n$ Heart_Rate              <dbl> 72.30153, 57.45764, 64.65870, 55.13147, 76.667…\n$ Systolic_BP             <dbl> 123.90209, 129.89331, 145.65490, 131.78522, 10…\n$ Diastolic_BP            <dbl> 85.68281, 73.52426, 71.99481, 68.21133, 92.902…\n$ Family_History          <chr> \"No\", \"Yes\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ Heart_Attack_Occurrence <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\"…\n$ Extra_Column_1          <dbl> 0.40498852, 0.03627815, 0.85297888, 0.39085280…\n$ Extra_Column_2          <dbl> 0.43330004, 0.51256694, 0.21959083, 0.29684675…\n$ Extra_Column_3          <dbl> 0.62871236, 0.66839275, 0.61343656, 0.15572404…\n$ Extra_Column_4          <dbl> 0.70160955, 0.11552874, 0.50800995, 0.87025144…\n$ Extra_Column_5          <dbl> 0.49814235, 0.42381938, 0.90066981, 0.39035591…\n$ Extra_Column_6          <dbl> 0.007901312, 0.083932768, 0.227205241, 0.40318…\n$ Extra_Column_7          <dbl> 0.79458257, 0.68895108, 0.49634358, 0.74140891…\n$ Extra_Column_8          <dbl> 0.29077922, 0.83016364, 0.75210679, 0.22396813…\n$ Extra_Column_9          <dbl> 0.49719307, 0.63449028, 0.18150125, 0.32931387…\n$ Extra_Column_10         <dbl> 0.52199452, 0.30204337, 0.62918031, 0.14319054…\n$ Extra_Column_11         <dbl> 0.79965663, 0.04368285, 0.01827617, 0.90778075…\n$ Extra_Column_12         <dbl> 0.72239788, 0.45166789, 0.06322702, 0.54232201…\n$ Extra_Column_13         <dbl> 0.1487387, 0.8786714, 0.1465122, 0.9224606, 0.…\n$ Extra_Column_14         <dbl> 0.8340099, 0.5356022, 0.9972962, 0.6262165, 0.…\n$ Extra_Column_15         <dbl> 0.061632229, 0.617825340, 0.974455410, 0.22860…\n```\n\n\n:::\n:::\n\n\n\nThe following provides an overview of the Japan Heart Attack dataset using the `ExpData()` function, summarizing both overall and variable-level details. \n\n::: panel-tabset\n### Overall data summary\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary1 <- heart_data %>%\n  ExpData(type = 1)\n\n# Display the summary (further customization possible)\nsummary1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                          Descriptions     Value\n1                                   Sample size (nrow)     30000\n2                              No. of variables (ncol)        32\n3                    No. of numeric/interger variables        22\n4                              No. of factor variables         0\n5                                No. of text variables        10\n6                             No. of logical variables         0\n7                          No. of identifier variables        20\n8                                No. of date variables         0\n9             No. of zero variance variables (uniform)         0\n10               %. of variables having complete cases 100% (32)\n11   %. of variables having >0% and <50% missing cases    0% (0)\n12 %. of variables having >=50% and <90% missing cases    0% (0)\n13          %. of variables having >=90% missing cases    0% (0)\n```\n\n\n:::\n:::\n\n\n\n### Variable level summary\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary2 <- heart_data %>%\n  ExpData(type = 2)\n\n# Display the summary (further customization possible)\nsummary2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Index           Variable_Name Variable_Type Sample_n Missing_Count\n1      1                     Age       numeric    30000             0\n2      2                  Gender     character    30000             0\n3      3                  Region     character    30000             0\n4      4         Smoking_History     character    30000             0\n5      5        Diabetes_History     character    30000             0\n6      6    Hypertension_History     character    30000             0\n7      7       Cholesterol_Level       numeric    30000             0\n8      8       Physical_Activity     character    30000             0\n9      9            Diet_Quality     character    30000             0\n10    10     Alcohol_Consumption     character    30000             0\n11    11           Stress_Levels       numeric    30000             0\n12    12                     BMI       numeric    30000             0\n13    13              Heart_Rate       numeric    30000             0\n14    14             Systolic_BP       numeric    30000             0\n15    15            Diastolic_BP       numeric    30000             0\n16    16          Family_History     character    30000             0\n17    17 Heart_Attack_Occurrence     character    30000             0\n18    18          Extra_Column_1       numeric    30000             0\n19    19          Extra_Column_2       numeric    30000             0\n20    20          Extra_Column_3       numeric    30000             0\n21    21          Extra_Column_4       numeric    30000             0\n22    22          Extra_Column_5       numeric    30000             0\n23    23          Extra_Column_6       numeric    30000             0\n24    24          Extra_Column_7       numeric    30000             0\n25    25          Extra_Column_8       numeric    30000             0\n26    26          Extra_Column_9       numeric    30000             0\n27    27         Extra_Column_10       numeric    30000             0\n28    28         Extra_Column_11       numeric    30000             0\n29    29         Extra_Column_12       numeric    30000             0\n30    30         Extra_Column_13       numeric    30000             0\n31    31         Extra_Column_14       numeric    30000             0\n32    32         Extra_Column_15       numeric    30000             0\n   Per_of_Missing No_of_distinct_values\n1               0                    62\n2               0                     2\n3               0                     2\n4               0                     2\n5               0                     2\n6               0                     2\n7               0                 30000\n8               0                     3\n9               0                     3\n10              0                     4\n11              0                 29613\n12              0                 30000\n13              0                 30000\n14              0                 30000\n15              0                 30000\n16              0                     2\n17              0                     2\n18              0                 30000\n19              0                 30000\n20              0                 30000\n21              0                 30000\n22              0                 30000\n23              0                 30000\n24              0                 30000\n25              0                 30000\n26              0                 30000\n27              0                 30000\n28              0                 30000\n29              0                 30000\n30              0                 30000\n31              0                 30000\n32              0                 30000\n```\n\n\n:::\n:::\n\n\n\n:::\n\n### Convert categorical variables to factors\n\nFrom the overview above, we see that the dataset contains no missing values, and the categorical variables have a maximum of 4 unique values. Converting these variables into factors ensures they are correctly treated as categorical data during analysis and visualization.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convert selected categorical variables into factors\nheart_data <- heart_data %>%\n  mutate(\n    Gender = as.factor(Gender),\n    Region = as.factor(Region),\n    Smoking_History = as.factor(Smoking_History),\n    Diabetes_History = as.factor(Diabetes_History),\n    Hypertension_History = as.factor(Hypertension_History),\n    Physical_Activity = as.factor(Physical_Activity),\n    Diet_Quality = as.factor(Diet_Quality),\n    Alcohol_Consumption = as.factor(Alcohol_Consumption),\n    Family_History = as.factor(Family_History),\n    Heart_Attack_Occurrence = as.factor(Heart_Attack_Occurrence)\n  )\n```\n:::\n\n\n\n### Drop extra columns\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Select only the Extra_Columns and the outcome variable\nextra_data <- heart_data %>%\n  select(starts_with(\"Extra_Column_\"), Heart_Attack_Occurrence)\n\n# Reshape to long format\nextra_data_long <- melt(extra_data, id.vars = \"Heart_Attack_Occurrence\")\n\n# Create boxplots comparing each Extra_Column by Heart_Attack_Occurrence\nggplot(extra_data_long, aes(x = Heart_Attack_Occurrence, y = value)) +\n  geom_boxplot() +\n  facet_wrap(~ variable, scales = \"free\") +\n  labs(\n    title = \"Distribution of Extra Columns by Heart Attack Occurrence\",\n    x = \"Heart Attack Occurrence\",\n    y = \"Value\"\n  )\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-7-1.png){width=1152}\n:::\n:::\n\n\nSince these variables do not appear to vary by heart attack status, they are unlikely to provide useful information for any downstream analysis (e.g., modeling, hypothesis testing). Dropping them will simplify the dataset and help focus on variables that do relate to heart attack risk. \n\nWe can drop them with the following code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheart_data <- heart_data %>%\n  select(-starts_with(\"Extra_Column_\"))\n```\n:::\n\n\n\n\n### Cleaned dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(heart_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 30,000\nColumns: 17\n$ Age                     <dbl> 56, 69, 46, 32, 60, 25, 78, 38, 56, 75, 36, 40…\n$ Gender                  <fct> Male, Male, Male, Female, Female, Female, Male…\n$ Region                  <fct> Urban, Urban, Rural, Urban, Rural, Rural, Urba…\n$ Smoking_History         <fct> Yes, No, Yes, No, No, No, No, Yes, No, No, No,…\n$ Diabetes_History        <fct> No, No, No, No, No, No, Yes, No, No, No, No, N…\n$ Hypertension_History    <fct> No, No, No, No, No, No, Yes, No, Yes, No, Yes,…\n$ Cholesterol_Level       <dbl> 186.4002, 185.1367, 210.6966, 211.1655, 223.81…\n$ Physical_Activity       <fct> Moderate, Low, Low, Moderate, High, Low, High,…\n$ Diet_Quality            <fct> Poor, Good, Average, Good, Good, Good, Poor, P…\n$ Alcohol_Consumption     <fct> Low, Low, Moderate, High, High, High, High, No…\n$ Stress_Levels           <dbl> 3.644786, 3.384056, 3.810911, 6.014878, 6.8068…\n$ BMI                     <dbl> 33.96135, 28.24287, 27.60121, 23.71729, 19.771…\n$ Heart_Rate              <dbl> 72.30153, 57.45764, 64.65870, 55.13147, 76.667…\n$ Systolic_BP             <dbl> 123.90209, 129.89331, 145.65490, 131.78522, 10…\n$ Diastolic_BP            <dbl> 85.68281, 73.52426, 71.99481, 68.21133, 92.902…\n$ Family_History          <fct> No, Yes, No, No, No, No, No, No, No, Yes, Yes,…\n$ Heart_Attack_Occurrence <fct> No, No, No, No, No, No, No, No, Yes, No, No, N…\n```\n\n\n:::\n:::\n\n\n## Exploratory visuals \n\nWe create a new variable, `Age_Group`, classifying individuals as “Over50” or “50OrBelow” to compare younger vs. older individuals.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheart_data <- heart_data %>%\n  mutate(Age_Group = ifelse(Age > 50, \"Over50\", \"50OrBelow\") %>% as.factor())\n```\n:::\n\n\n\n\nWe create `AgeGender` by combining the `Age_Group` and `gender`. We also combine `smoking status` and `physical activity` into `SmokeAct` and reorder `alcohol consumption` levels.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Demographic variables\nheart_data <- heart_data %>%\n  mutate(\n    AgeGender = case_when(\n      Age_Group == \"Over50\" & Gender == \"Male\"   ~ \"Over 50 Male\",\n      Age_Group == \"Over50\" & Gender == \"Female\" ~ \"Over 50 Female\",\n      Age_Group == \"50OrBelow\" & Gender == \"Male\"   ~ \"≤50 Male\",\n      Age_Group == \"50OrBelow\" & Gender == \"Female\" ~ \"≤50 Female\"\n    ) %>% factor(levels = c(\"≤50 Female\",\"≤50 Male\",\"Over 50 Female\",\"Over 50 Male\"))\n  )\n\n# Lifestyle variables\nheart_data <- heart_data %>%\n  mutate(\n    SmokeAct = case_when(\n      Smoking_History == \"Yes\" & Physical_Activity == \"Low\"      ~ \"Smoker, PA:Low\",\n      Smoking_History == \"Yes\" & Physical_Activity == \"Moderate\" ~ \"Smoker, PA:Mod\",\n      Smoking_History == \"Yes\" & Physical_Activity == \"High\"     ~ \"Smoker, PA:High\",\n      Smoking_History == \"No\"  & Physical_Activity == \"Low\"      ~ \"Non-Smoker, PA:Low\",\n      Smoking_History == \"No\"  & Physical_Activity == \"Moderate\" ~ \"Non-Smoker, PA:Mod\",\n      Smoking_History == \"No\"  & Physical_Activity == \"High\"     ~ \"Non-Smoker, PA:High\"\n    ) %>% \n    # Order them in a sensible sequence:\n    factor(levels = c(\"Non-Smoker, PA:Low\",\"Non-Smoker, PA:Mod\",\"Non-Smoker, PA:High\",\n                      \"Smoker, PA:Low\",\"Smoker, PA:Mod\",\"Smoker, PA:High\"))\n  )\n```\n:::\n\n\n\n\n### Mosaic Plot: Demographic Analysis\nWe plot a mosaic where `AgeGender` is on the x-axis, color indicates heart attack occurrence, and each facet represents a different region.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_demo <- ggplot(heart_data) +\n  geom_mosaic(\n    aes(x = product(AgeGender),\n        fill = Heart_Attack_Occurrence,\n        text = paste0(\"Group: \", AgeGender,\n                      \"<br>Region: \", Region,\n                      \"<br>Heart Attack: \", Heart_Attack_Occurrence)\n    ),\n    alpha = 0.9\n  ) +\n  facet_wrap(~ Region) +\n  scale_fill_manual(values = c(\"No\" = \"#F1B1B5\", \"Yes\" = \"#97B3AE\")) +\n  labs(\n    title = \"Demographic Mosaic: Age & Gender by Region vs. Heart Attack\",\n    x     = \"Age & Gender\",\n    y     = \" \",\n    fill  = \"Heart Attack\"\n  ) +\n  theme_minimal()\n\np_demo\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-12-1.png){width=1152}\n:::\n:::\n\n\nThis mosaic plot illustrates heart attack occurrences across different age and gender groups within rural and urban regions. The width of each bar segment corresponds to the relative size of that demographic group, while the height indicates the proportion of individuals who experienced a heart attack. \n\nOverall, heart attack rates remain relatively consistent between rural and urban areas. However, males tend to have a higher probability of heart attack than females, regardless of age or region.\n\n\n### Mosaic plot: Lifestyle factors\n\nWe create a mosaic plot with `SmokeAct` on the x-axis, color by heart attack occurrence, and facet by the four alcohol consumption levels.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Reorder factor levels for Alcohol_Consumption\nheart_data <- heart_data %>%\n  mutate(\n    Alcohol_Consumption = factor(\n      Alcohol_Consumption,\n      levels = c(\"High\", \"Moderate\", \"Low\", \"None\")\n    )\n  )\n\nggplot(heart_data) +\n  geom_mosaic(aes(\n    x    = product(SmokeAct),\n    fill = Heart_Attack_Occurrence\n  ), alpha = 0.9) +\n  facet_wrap(~ Alcohol_Consumption, ncol = 2) +\n  scale_fill_manual(values = c(\"No\" = \"#F1B1B5\", \"Yes\" = \"#97B3AE\")) +\n  labs(\n    title = \"Lifestyle Mosaic: Smoking, Activity, and Alcohol vs. Heart Attack\",\n    subtitle = \"PA = Physical Activity. Each facet represents a different Alcohol Consumption level.\",\n    x = \"Smoking & PA Group\",\n    y = \"\",\n    fill = \"Heart Attack\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title    = element_text(face = \"bold\", size = 14, hjust=0.5),\n    plot.subtitle = element_text(size = 10, hjust=0.5),\n    strip.text    = element_text(face=\"bold\"),\n    axis.text.x   = element_text(angle=40, hjust=1, size=7),\n    panel.spacing = unit(2, \"lines\")\n  )\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n\n\nThis mosaic plot explores how smoking, physical activity (PA), and alcohol consumption interact to influence heart attack occurrences. Each facet represents a different alcohol consumption level (High, Moderate, Low, None).\n\nInterestingly, non-smokers who report no alcohol consumption but high physical activity exhibit one of the highest heart attack rates. Additionally, smokers with moderate physical activity tend to have higher heart attack rates compared to smokers with low or high physical activity.\n\n### Pairwise numeric plot (Health metrics)\nThis code uses `ggpairs()` to create a matrix of pairwise plots for all numeric variables in heart_data. The `mapping = aes(color = Heart_Attack_Occurrence)` argument adds a color-coded grouping by heart attack status.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Automatically select all numeric columns from the dataset\nnumeric_cols <- sapply(heart_data, is.numeric)\n\npairwise_plot <- ggpairs(\n  data = heart_data,\n  columns = which(numeric_cols),\n  mapping = aes(color = Heart_Attack_Occurrence),\n  lower = list(continuous = wrap(\"smooth\", alpha = 0.3, size = 0.5)),\n  diag = list(continuous = wrap(\"densityDiag\", alpha = 0.5)),\n  upper = list(continuous = wrap(\"cor\", size = 4))\n) +\n  ggtitle(\"Pairwise Correlations Among All Numeric Metrics\")\n\npairwise_plot\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n\n##### Explanation of the plot\n\nThis grid compares health metrics like BMI, blood pressure, cholesterol, and stress. The **diagonal panels** show density curves for each variable, revealing, for instance, that `Age` has a broader distribution compared to the other variables.\n\nThe **upper panels** list correlation coefficients and their significance, most of which are near zero (e.g., **`Corr: 0.025, 0.048`**), indicating that these variables do not strongly co-vary. In the **lower scatter plots**, points are colored by heart attack occurrence; no tight clustering suggests no single numeric threshold exclusively separates “Yes” vs. “No.” For instance, `Systolic_BP` and `Diastolic_BP` show little correlation as high `Systolic_BP` often coexists with both high and low `Diastolic_BP`. Overall, **no single numeric factor** stands out as a strictly linear driver of heart attack, though there may be subtle nonlinear or interactive effects to explore later.\n\n\n### Train test split\nBefore building a predictive model, it is best practice to split the data into training and testing sets. The createDataPartition function ensures that the distribution of the target class is approximately the same in both sets. Here, we allocate 80% of the data for training and 20% for testing.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\n\ntrain_index <- createDataPartition(heart_data$Heart_Attack_Occurrence, p = 0.8, list = FALSE)\n\ntrain_data <- heart_data[train_index, ]\ntest_data  <- heart_data[-train_index, ]\n```\n:::\n\n\n\n\n## Naive Logistic Regression\n\nuses all variables in cleaned dataset\n\n\n### Fit the Model\n\nWe will fit a logistic regression using `glm()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Use a standard glm with all predictors\nnaive_glm <- glm(\n  Heart_Attack_Occurrence ~ .,\n  data   = train_data,\n  family = binomial\n)\n\nsummary(naive_glm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = Heart_Attack_Occurrence ~ ., family = binomial, \n    data = train_data)\n\nCoefficients: (5 not defined because of singularities)\n                              Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                 -2.485e+00  3.791e-01  -6.556 5.53e-11 ***\nAge                          2.752e-04  2.430e-03   0.113    0.910    \nGenderMale                   6.021e-02  6.282e-02   0.958    0.338    \nRegionUrban                  2.453e-02  4.757e-02   0.516    0.606    \nSmoking_HistoryYes           6.937e-02  8.725e-02   0.795    0.427    \nDiabetes_HistoryYes          2.793e-02  5.346e-02   0.523    0.601    \nHypertension_HistoryYes     -1.788e-02  5.032e-02  -0.355    0.722    \nCholesterol_Level            2.151e-04  7.257e-04   0.296    0.767    \nPhysical_ActivityLow        -1.942e-04  1.019e-01  -0.002    0.998    \nPhysical_ActivityModerate    4.391e-02  9.387e-02   0.468    0.640    \nDiet_QualityGood             5.332e-02  4.822e-02   1.106    0.269    \nDiet_QualityPoor            -3.492e-02  6.015e-02  -0.581    0.562    \nAlcohol_ConsumptionModerate -1.678e-02  6.038e-02  -0.278    0.781    \nAlcohol_ConsumptionLow       4.613e-02  6.292e-02   0.733    0.464    \nAlcohol_ConsumptionNone      1.095e-01  8.275e-02   1.323    0.186    \nStress_Levels               -2.723e-02  1.097e-02  -2.483    0.013 *  \nBMI                         -5.340e-03  4.320e-03  -1.236    0.216    \nHeart_Rate                   8.921e-04  2.161e-03   0.413    0.680    \nSystolic_BP                  2.349e-05  1.444e-03   0.016    0.987    \nDiastolic_BP                 3.124e-03  2.172e-03   1.439    0.150    \nFamily_HistoryYes           -5.566e-02  4.776e-02  -1.165    0.244    \nAge_GroupOver50              6.516e-02  9.826e-02   0.663    0.507    \nAgeGender≤50 Male            3.901e-02  8.676e-02   0.450    0.653    \nAgeGenderOver 50 Female             NA         NA      NA       NA    \nAgeGenderOver 50 Male               NA         NA      NA       NA    \nSmokeActNon-Smoker, PA:Mod   1.879e-03  1.141e-01   0.016    0.987    \nSmokeActNon-Smoker, PA:High  1.103e-01  1.219e-01   0.905    0.366    \nSmokeActSmoker, PA:Low              NA         NA      NA       NA    \nSmokeActSmoker, PA:Mod              NA         NA      NA       NA    \nSmokeActSmoker, PA:High             NA         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 15481  on 24000  degrees of freedom\nResidual deviance: 15454  on 23976  degrees of freedom\nAIC: 15504\n\nNumber of Fisher Scoring iterations: 5\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_collinearity(naive_glm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Check for Multicollinearity\n\nLow Correlation\n\n                 Term  VIF        VIF 95% CI Increased SE Tolerance\n                  Age 4.04 [ 3.95,     4.13]         2.01      0.25\n               Gender 2.10 [ 2.06,     2.15]         1.45      0.48\n               Region 1.00 [ 1.00,   334.09]         1.00      1.00\n      Smoking_History 3.46 [ 3.39,     3.54]         1.86      0.29\n     Diabetes_History 1.00 [ 1.00,    28.65]         1.00      1.00\n Hypertension_History 1.00 [ 1.00,   434.16]         1.00      1.00\n    Cholesterol_Level 1.00 [ 1.00, 2.87e+05]         1.00      1.00\n         Diet_Quality 1.00 [ 1.00,     6.60]         1.00      1.00\n  Alcohol_Consumption 1.00 [ 1.00,     1.51]         1.00      1.00\n        Stress_Levels 1.00 [ 1.00,   179.58]         1.00      1.00\n                  BMI 1.00 [ 1.00,   397.67]         1.00      1.00\n           Heart_Rate 1.00 [ 1.00,    68.90]         1.00      1.00\n          Systolic_BP 1.00 [ 1.00,    63.91]         1.00      1.00\n         Diastolic_BP 1.00 [ 1.00,   407.49]         1.00      1.00\n       Family_History 1.00 [ 1.00,   606.63]         1.00      1.00\n            AgeGender 3.19 [ 3.13,     3.26]         1.79      0.31\n Tolerance 95% CI\n     [0.24, 0.25]\n     [0.47, 0.48]\n     [0.00, 1.00]\n     [0.28, 0.30]\n     [0.03, 1.00]\n     [0.00, 1.00]\n     [0.00, 1.00]\n     [0.15, 1.00]\n     [0.66, 1.00]\n     [0.01, 1.00]\n     [0.00, 1.00]\n     [0.01, 1.00]\n     [0.02, 1.00]\n     [0.00, 1.00]\n     [0.00, 1.00]\n     [0.31, 0.32]\n\nModerate Correlation\n\n      Term  VIF        VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_Group 5.14 [ 5.03,     5.26]         2.27      0.19     [0.19, 0.20]\n\nHigh Correlation\n\n              Term   VIF        VIF 95% CI Increased SE Tolerance\n Physical_Activity 10.72 [10.47,    10.98]         3.27      0.09\n          SmokeAct 18.83 [18.38,    19.30]         4.34      0.05\n Tolerance 95% CI\n     [0.09, 0.10]\n     [0.05, 0.05]\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot the multicollinearity diagnostics for a visual overview\ncheck_c <- check_collinearity(naive_glm)\nplot(check_c)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-18-1.png){width=1440}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check the levels of your outcome variable\nlevels(train_data$Heart_Attack_Occurrence)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"No\"  \"Yes\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Recode the outcome: \"Yes\" becomes 1 and \"No\" becomes 0\nactual_outcome <- ifelse(train_data$Heart_Attack_Occurrence == \"Yes\", 1, 0)\n\n# Verify there are no missing values\nsum(is.na(actual_outcome))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nactual_outcome <- ifelse(train_data$Heart_Attack_Occurrence == \"Yes\", 1, 0)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Install and load the separationplot package if not already installed\nif (!require(separationplot)) {\n  install.packages(\"separationplot\")\n  library(separationplot)\n} else {\n  library(separationplot)\n}\n\n# Get predicted probabilities from the fitted logistic regression model\npredicted_probs <- predict(naive_glm, type = \"response\")\n\n# Create the separation plot\nseparationplot(\n  pred   = predicted_probs,\n  actual = actual_outcome,\n  line   = TRUE\n)\n\n# Add a title to the plot\ntitle(\"Separation Plot for Logistic Regression\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check for potential collinearity\ncheck_collinearity(naive_glm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Check for Multicollinearity\n\nLow Correlation\n\n                 Term  VIF        VIF 95% CI Increased SE Tolerance\n                  Age 4.04 [ 3.95,     4.13]         2.01      0.25\n               Gender 2.10 [ 2.06,     2.15]         1.45      0.48\n               Region 1.00 [ 1.00,   334.09]         1.00      1.00\n      Smoking_History 3.46 [ 3.39,     3.54]         1.86      0.29\n     Diabetes_History 1.00 [ 1.00,    28.65]         1.00      1.00\n Hypertension_History 1.00 [ 1.00,   434.16]         1.00      1.00\n    Cholesterol_Level 1.00 [ 1.00, 2.87e+05]         1.00      1.00\n         Diet_Quality 1.00 [ 1.00,     6.60]         1.00      1.00\n  Alcohol_Consumption 1.00 [ 1.00,     1.51]         1.00      1.00\n        Stress_Levels 1.00 [ 1.00,   179.58]         1.00      1.00\n                  BMI 1.00 [ 1.00,   397.67]         1.00      1.00\n           Heart_Rate 1.00 [ 1.00,    68.90]         1.00      1.00\n          Systolic_BP 1.00 [ 1.00,    63.91]         1.00      1.00\n         Diastolic_BP 1.00 [ 1.00,   407.49]         1.00      1.00\n       Family_History 1.00 [ 1.00,   606.63]         1.00      1.00\n            AgeGender 3.19 [ 3.13,     3.26]         1.79      0.31\n Tolerance 95% CI\n     [0.24, 0.25]\n     [0.47, 0.48]\n     [0.00, 1.00]\n     [0.28, 0.30]\n     [0.03, 1.00]\n     [0.00, 1.00]\n     [0.00, 1.00]\n     [0.15, 1.00]\n     [0.66, 1.00]\n     [0.01, 1.00]\n     [0.00, 1.00]\n     [0.01, 1.00]\n     [0.02, 1.00]\n     [0.00, 1.00]\n     [0.00, 1.00]\n     [0.31, 0.32]\n\nModerate Correlation\n\n      Term  VIF        VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_Group 5.14 [ 5.03,     5.26]         2.27      0.19     [0.19, 0.20]\n\nHigh Correlation\n\n              Term   VIF        VIF 95% CI Increased SE Tolerance\n Physical_Activity 10.72 [10.47,    10.98]         3.27      0.09\n          SmokeAct 18.83 [18.38,    19.30]         4.34      0.05\n Tolerance 95% CI\n     [0.09, 0.10]\n     [0.05, 0.05]\n```\n\n\n:::\n\n```{.r .cell-code}\nggcoefstats(naive_glm, \n            output = \"plot\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-22-1.png){width=1152}\n:::\n:::\n\n\n\n\n\n\n### Predictions + Performance\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Predict on test set\npred_prob_naive <- predict(naive_glm, newdata = test_data, type = \"response\")\n\npred_class_naive <- ifelse(pred_prob_naive >= 0.5, \"Yes\", \"No\") %>%\n  factor(levels = levels(test_data$Heart_Attack_Occurrence))\n\n# Evaluate\nnaive_results <- data.frame(\n  obs   = test_data$Heart_Attack_Occurrence,\n  pred  = pred_class_naive,\n  prob  = pred_prob_naive\n)\n\nnaive_cm <- naive_results %>%\n  conf_mat(obs, pred)\n\nnaive_metrics <- naive_cm %>%\n  summary()  # yardstick summary\n\nnaive_metrics\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 13 × 3\n   .metric              .estimator .estimate\n   <chr>                <chr>          <dbl>\n 1 accuracy             binary         0.901\n 2 kap                  binary         0    \n 3 sens                 binary         1    \n 4 spec                 binary         0    \n 5 ppv                  binary         0.901\n 6 npv                  binary       NaN    \n 7 mcc                  binary        NA    \n 8 j_index              binary         0    \n 9 bal_accuracy         binary         0.5  \n10 detection_prevalence binary         1    \n11 precision            binary         0.901\n12 recall               binary         1    \n13 f_meas               binary         0.948\n```\n\n\n:::\n:::\n\n\n\n#### Confusion Matrix Heatmap\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nautoplot(naive_cm, type = \"heatmap\") +\n  labs(title=\"Naïve Logistic Regression: Confusion Matrix\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n\n\n#### ROC Curve\n\n\n::: {.cell}\n\n```{.r .cell-code}\nroc_obj_naive <- roc(\n  as.numeric(test_data$Heart_Attack_Occurrence),\n  as.numeric(pred_prob_naive)\n)\n\nplot(roc_obj_naive, col = \"#1c61b6\", main=\"ROC Curve: Naïve Logistic Model\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex1_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n\n```{.r .cell-code}\nauc(roc_obj_naive)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nArea under the curve: 0.5133\n```\n\n\n:::\n:::\n",
    "supporting": [
      "Take-home_Ex1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}