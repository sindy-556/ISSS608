{
  "hash": "6d87f5374039e66797e4c5f29d2a452b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on Exercise 7: Visualising and Analysing Time-Oriented Data\"\nauthor: \"Sindy\"\ndate-modified: \"last-modified\"\nexecute:\n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\n## 1. Getting Started\n\nInstall and load the necessary packages:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(scales, viridis, lubridate, ggthemes, \n               gridExtra, readxl, knitr, data.table, \n               CGPfunctions, ggHoriPlot, tidyverse, plotly)\n```\n:::\n\n\n\n## 2. Plotting a Calendar Heatmap\n\nA calendar heatmap can provide a quick visual cue of how data points (e.g., attacks, sales, events) distribute across days and hours of the week.\n\n### 2.1 The Data\n\nWe will use a CSV file (*eventlog.csv*) containing time-series data of cyber attacks by country.\n\n### 2.2 Import and Examine the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattacks <- read_csv(\"data/eventlog.csv\")\n\n# Quick peek at the data\nkable(head(attacks))\n```\n\n::: {.cell-output-display}\n\n\n|timestamp           |source_country |tz              |\n|:-------------------|:--------------|:---------------|\n|2015-03-12 15:59:16 |CN             |Asia/Shanghai   |\n|2015-03-12 16:00:48 |FR             |Europe/Paris    |\n|2015-03-12 16:02:26 |CN             |Asia/Shanghai   |\n|2015-03-12 16:02:38 |US             |America/Chicago |\n|2015-03-12 16:03:22 |CN             |Asia/Shanghai   |\n|2015-03-12 16:03:45 |CN             |Asia/Shanghai   |\n\n\n:::\n:::\n\n\n\nThere are three columns, namely timestamp, source_country and tz.\n\n- `timestamp` field stores date-time values in POSIXct format.\n- `source_country` field stores the source of the attack. It is in ISO 3166-1 alpha-2 country code.\n- `tz` field stores time zone of the source IP address.\n\n\n### 2.3 Data Preparation\n\nWe want to extract weekday and hour from the timestamp.\n\n#### Step 1: Write a function\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmake_hr_wkday <- function(ts, sc, tz) {\n  real_times <- ymd_hms(ts, tz = tz[1], quiet = TRUE)\n  dt <- data.table(\n    source_country = sc,\n    wkday = weekdays(real_times),\n    hour  = hour(real_times)\n  )\n  return(dt)\n}\n```\n:::\n\n\n\n#### Step 2: Use the function and re-factor\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwkday_levels <- c('Saturday','Friday','Thursday','Wednesday','Tuesday','Monday','Sunday')\n\nattacks <- attacks %>%\n  group_by(tz) %>%\n  do(make_hr_wkday(.$timestamp, .$source_country, .$tz)) %>% \n  ungroup() %>% \n  mutate(\n    wkday = factor(wkday, levels = wkday_levels),\n    hour  = factor(hour, levels = 0:23)\n  )\n\nkable(head(attacks))\n```\n\n::: {.cell-output-display}\n\n\n|tz           |source_country |wkday    |hour |\n|:------------|:--------------|:--------|:----|\n|Africa/Cairo |BG             |Saturday |20   |\n|Africa/Cairo |TW             |Sunday   |6    |\n|Africa/Cairo |TW             |Sunday   |8    |\n|Africa/Cairo |CN             |Sunday   |11   |\n|Africa/Cairo |US             |Sunday   |15   |\n|Africa/Cairo |CA             |Monday   |11   |\n\n\n:::\n:::\n\n\n\n### 2.4 Building the Calendar Heatmap\n\nAggregate the data and visualize:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrouped <- attacks %>%\n  count(wkday, hour) %>%\n  ungroup() %>%\n  na.omit()\n\nggplot(grouped, aes(hour, wkday, fill = n)) +\n  geom_tile(color = \"white\", size = 0.1) +\n  theme_tufte(base_family = \"Helvetica\") +\n  coord_equal() +\n  scale_fill_gradient(name = \"# of attacks\", \n                      low = \"sky blue\", high = \"dark blue\") +\n  labs(x = NULL, y = NULL,\n       title = \"Attacks by weekday and time of day\") +\n  theme(\n    axis.ticks = element_blank(),\n    plot.title = element_text(hjust = 0.5),\n    legend.title = element_text(size = 8),\n    legend.text = element_text(size = 6)\n  )\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex07_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n### 2.5 Multiple Calendar Heatmaps (Facets)\n\n#### Step 1: Find top 4 countries\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattacks_by_country <- count(attacks, source_country) %>%\n  mutate(percent = percent(n/sum(n))) %>%\n  arrange(desc(n))\n```\n:::\n\n\n\n#### Step 2: Extract only these top 4 countries\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop4 <- attacks_by_country$source_country[1:4]\ntop4_attacks <- attacks %>%\n  filter(source_country %in% top4) %>%\n  count(source_country, wkday, hour) %>%\n  ungroup() %>%\n  mutate(source_country = factor(source_country, levels = top4)) %>%\n  na.omit()\n```\n:::\n\n\n\n#### Step 3: Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(top4_attacks, aes(hour, wkday, fill = n)) +\n  geom_tile(color = \"white\", size = 0.1) +\n  theme_tufte(base_family = \"Helvetica\") +\n  coord_equal() +\n  scale_fill_gradient(name = \"# of attacks\",\n                      low = \"sky blue\", \n                      high = \"dark blue\") +\n  facet_wrap(~source_country, ncol = 2) +\n  labs(\n    x = NULL, \n    y = NULL, \n    title = \"Attacks on top 4 countries by weekday and time of day\"\n  ) +\n  theme(\n    axis.ticks = element_blank(),\n    axis.text.x = element_text(size = 7),\n    plot.title = element_text(hjust = 0.5),\n    legend.title = element_text(size = 8),\n    legend.text = element_text(size = 6)\n  )\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex07_files/figure-html/unnamed-chunk-8-1.png){width=1152}\n:::\n:::\n\n\n\n## 3. Plotting a Cycle Plot\n\nA **cycle plot** highlights intra-year (or intra-cycle) patterns and helps compare across years (cycles).\n\n### 3.1 Data Import\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nair <- read_excel(\"data/arrivals_by_air.xlsx\")\n```\n:::\n\n\n\n### 3.2 Derive Month and Year\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nair$month <- factor(month(air$`Month-Year`), \n                    levels = 1:12, \n                    labels = month.abb, \n                    ordered = TRUE)\nair$year <- year(ymd(air$`Month-Year`))\n```\n:::\n\n\n\n### 3.3 Extract Target Country\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nVietnam <- air %>%\n  select(Vietnam, month, year) %>%\n  filter(year >= 2010)\n```\n:::\n\n\n\n### 3.4 Compute Averages\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhline.data <- Vietnam %>%\n  group_by(month) %>%\n  summarise(avgvalue = mean(Vietnam))\n```\n:::\n\n\n\n### 3.5 Plot the Cycle Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(Vietnam, aes(x = year, y = Vietnam, group = month)) + \n  geom_line(color = \"black\") +\n  geom_hline(\n    data     = hline.data, \n    aes(yintercept = avgvalue),\n    linetype = 6, \n    colour   = \"red\",\n    size     = 0.5\n  ) + \n  facet_wrap(~month, nrow = 1) +\n  scale_x_continuous(breaks = seq(2010, 2019,3)) +\n  labs(\n    x     = \"Year\",\n    y     = \"No. of Visitors\",\n    title = \"Visitor arrivals from Vietnam by air, Jan 2010–Dec 2019\"\n  ) +\n  theme_gray(base_size = 8)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex07_files/figure-html/unnamed-chunk-13-1.png){width=1152}\n:::\n:::\n\n\n\n## 4. Plotting a Slopegraph\n\nA **slopegraph** compares changes between two or more time points across different categories. We’ll use `newggslopegraph()` from **CGPfunctions**.\n\n### 4.1 Data Import\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrice <- read_csv(\"data/rice.csv\")\n```\n:::\n\n\n\n### 4.2 Plot the Slopegraph\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrice %>%\n  mutate(Year = factor(Year)) %>%\n  filter(Year %in% c(1961, 1980)) %>%\n  newggslopegraph(\n    Year, \n    Yield, \n    Country,\n    Title = \"Rice Yield of Top 11 Asian Countries\",\n    SubTitle = \"1961-1980\",\n  )\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex07_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n> **Tip**: Converting `Year` to a factor helps emphasize discrete time points.\n\n\n## 5. More plots\n\n### 5.1 Highlighting the Maximum/Minimum in a Cycle Plot\n\nTo highlight extremes in the cycle plot, we can try:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nVietnam_extremes <- Vietnam %>%\n  group_by(month) %>%\n  mutate(\n    max_val = max(Vietnam),\n    min_val = min(Vietnam)\n  )\n\nggplot(Vietnam_extremes, aes(x = year, y = Vietnam, group = month)) +\n  geom_line() +\n  geom_point(data = subset(Vietnam_extremes, Vietnam == max_val),\n             aes(color = \"Max\"), size = 2) +\n  geom_point(data = subset(Vietnam_extremes, Vietnam == min_val),\n             aes(color = \"Min\"), size = 2) +\n  facet_wrap(~ month) +\n  scale_color_manual(values = c(\"Max\" = \"red\", \"Min\" = \"blue\")) +\n  labs(\n    title = \"Visitor Arrivals - Highlighting Max and Min by Month\",\n    color = \"\"\n  ) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex07_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\n### 5.2 Adding a Trendline to the Slopegraph\n\nWhile slopegraphs usually connect discrete points, we can experiment with a small data set over more than two years by adding intermediate lines:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrice %>%\n  filter(Year %in% c(1961,1970,1980)) %>%\n  mutate(Year = factor(Year)) %>%\n  newggslopegraph(\n    Year, \n    Yield, \n    Country,\n    Title = \"Rice Yield Over Multiple Time Points\",\n    SubTitle = \"Using Slopegraph with 1961, 1970, 1980\",\n    Caption = \"Extended example\"\n  )\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex07_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n### 5.3 Plotting a Horizon Chart\n\nA **horizon chart** can compactly show how a time series changes relative to a baseline. The `ggHoriPlot` package can help.\n\n**Example** (using the *arrivals_by_air.xlsx* data for Vietnam):\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhorizon_data <- Vietnam %>%\n  mutate(Date = ymd(paste(year, match(month, month.abb), \"01\", sep=\"-\"))) %>%\n  select(Date, Visitors = Vietnam)\n\nggplot(horizon_data, aes(x = Date, y = Visitors)) +\n  geom_horizon() +\n  theme_minimal() +\n  facet_wrap(~ \"Visitor Arrivals Horizon Chart\", ncol = 1)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex07_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n> **Note**: Horizon charts are especially useful if you have many time series to stack vertically.\n\n### 5.4 Making an Interactive Time-Series Plot\n\nWe could also convert any of these ggplot objects to an **interactive** plot using **plotly** or **ggiraph**:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- ggplot(horizon_data, aes(x = Date, y = Visitors)) +\n  geom_line() + theme_minimal()\n\nggplotly(p)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-b71d2c63c9aa13cee1c6\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-b71d2c63c9aa13cee1c6\">{\"x\":{\"data\":[{\"x\":[14610,14641,14669,14700,14730,14761,14791,14822,14853,14883,14914,14944,14975,15006,15034,15065,15095,15126,15156,15187,15218,15248,15279,15309,15340,15371,15400,15431,15461,15492,15522,15553,15584,15614,15645,15675,15706,15737,15765,15796,15826,15857,15887,15918,15949,15979,16010,16040,16071,16102,16130,16161,16191,16222,16252,16283,16314,16344,16375,16405,16436,16467,16495,16526,16556,16587,16617,16648,16679,16709,16740,16770,16801,16832,16861,16892,16922,16953,16983,17014,17045,17075,17106,17136,17167,17198,17226,17257,17287,17318,17348,17379,17410,17440,17471,17501,17532,17563,17591,17622,17652,17683,17713,17744,17775,17805,17836,17866,17897,17928,17956,17987,18017,18048,18078,18109,18140,18170,18201,18231],\"y\":[15781,16335,18061,22154,21461,28146,34020,25351,20105,20591,17991,23002,16891,22046,19430,21050,20422,30167,36526,23844,22842,20140,19790,23650,22637,22627,24102,25429,26039,32281,37527,27372,21864,22202,21804,24950,19793,24155,23807,27309,25326,33707,37861,28930,24113,24833,24109,25421,22967,27391,26405,26244,31407,40436,44613,35029,24965,26165,25635,27369,24906,23760,27347,31299,30131,38188,45043,32747,24834,26213,25102,27128,25981,29498,28805,34449,34454,43488,48958,38351,28041,27035,28643,31285,31125,28207,31443,33682,36844,50591,58349,43919,35317,33438,32527,33860,31432,35137,35832,41723,45269,55824,63476,49645,37341,36355,33356,33778,29621,37778,36769,40569,43176,60425,65554,51211,39766,37358,40535,34366],\"text\":[\"Date: 2010-01-01<br />Visitors: 15781\",\"Date: 2010-02-01<br />Visitors: 16335\",\"Date: 2010-03-01<br />Visitors: 18061\",\"Date: 2010-04-01<br />Visitors: 22154\",\"Date: 2010-05-01<br />Visitors: 21461\",\"Date: 2010-06-01<br />Visitors: 28146\",\"Date: 2010-07-01<br />Visitors: 34020\",\"Date: 2010-08-01<br />Visitors: 25351\",\"Date: 2010-09-01<br />Visitors: 20105\",\"Date: 2010-10-01<br />Visitors: 20591\",\"Date: 2010-11-01<br />Visitors: 17991\",\"Date: 2010-12-01<br />Visitors: 23002\",\"Date: 2011-01-01<br />Visitors: 16891\",\"Date: 2011-02-01<br />Visitors: 22046\",\"Date: 2011-03-01<br />Visitors: 19430\",\"Date: 2011-04-01<br />Visitors: 21050\",\"Date: 2011-05-01<br />Visitors: 20422\",\"Date: 2011-06-01<br />Visitors: 30167\",\"Date: 2011-07-01<br />Visitors: 36526\",\"Date: 2011-08-01<br />Visitors: 23844\",\"Date: 2011-09-01<br />Visitors: 22842\",\"Date: 2011-10-01<br />Visitors: 20140\",\"Date: 2011-11-01<br />Visitors: 19790\",\"Date: 2011-12-01<br />Visitors: 23650\",\"Date: 2012-01-01<br />Visitors: 22637\",\"Date: 2012-02-01<br />Visitors: 22627\",\"Date: 2012-03-01<br />Visitors: 24102\",\"Date: 2012-04-01<br />Visitors: 25429\",\"Date: 2012-05-01<br />Visitors: 26039\",\"Date: 2012-06-01<br />Visitors: 32281\",\"Date: 2012-07-01<br />Visitors: 37527\",\"Date: 2012-08-01<br />Visitors: 27372\",\"Date: 2012-09-01<br />Visitors: 21864\",\"Date: 2012-10-01<br />Visitors: 22202\",\"Date: 2012-11-01<br />Visitors: 21804\",\"Date: 2012-12-01<br />Visitors: 24950\",\"Date: 2013-01-01<br />Visitors: 19793\",\"Date: 2013-02-01<br />Visitors: 24155\",\"Date: 2013-03-01<br />Visitors: 23807\",\"Date: 2013-04-01<br />Visitors: 27309\",\"Date: 2013-05-01<br />Visitors: 25326\",\"Date: 2013-06-01<br />Visitors: 33707\",\"Date: 2013-07-01<br />Visitors: 37861\",\"Date: 2013-08-01<br />Visitors: 28930\",\"Date: 2013-09-01<br />Visitors: 24113\",\"Date: 2013-10-01<br />Visitors: 24833\",\"Date: 2013-11-01<br />Visitors: 24109\",\"Date: 2013-12-01<br />Visitors: 25421\",\"Date: 2014-01-01<br />Visitors: 22967\",\"Date: 2014-02-01<br />Visitors: 27391\",\"Date: 2014-03-01<br />Visitors: 26405\",\"Date: 2014-04-01<br />Visitors: 26244\",\"Date: 2014-05-01<br />Visitors: 31407\",\"Date: 2014-06-01<br />Visitors: 40436\",\"Date: 2014-07-01<br />Visitors: 44613\",\"Date: 2014-08-01<br />Visitors: 35029\",\"Date: 2014-09-01<br />Visitors: 24965\",\"Date: 2014-10-01<br />Visitors: 26165\",\"Date: 2014-11-01<br />Visitors: 25635\",\"Date: 2014-12-01<br />Visitors: 27369\",\"Date: 2015-01-01<br />Visitors: 24906\",\"Date: 2015-02-01<br />Visitors: 23760\",\"Date: 2015-03-01<br />Visitors: 27347\",\"Date: 2015-04-01<br />Visitors: 31299\",\"Date: 2015-05-01<br />Visitors: 30131\",\"Date: 2015-06-01<br />Visitors: 38188\",\"Date: 2015-07-01<br />Visitors: 45043\",\"Date: 2015-08-01<br />Visitors: 32747\",\"Date: 2015-09-01<br />Visitors: 24834\",\"Date: 2015-10-01<br />Visitors: 26213\",\"Date: 2015-11-01<br />Visitors: 25102\",\"Date: 2015-12-01<br />Visitors: 27128\",\"Date: 2016-01-01<br />Visitors: 25981\",\"Date: 2016-02-01<br />Visitors: 29498\",\"Date: 2016-03-01<br />Visitors: 28805\",\"Date: 2016-04-01<br />Visitors: 34449\",\"Date: 2016-05-01<br />Visitors: 34454\",\"Date: 2016-06-01<br />Visitors: 43488\",\"Date: 2016-07-01<br />Visitors: 48958\",\"Date: 2016-08-01<br />Visitors: 38351\",\"Date: 2016-09-01<br />Visitors: 28041\",\"Date: 2016-10-01<br />Visitors: 27035\",\"Date: 2016-11-01<br />Visitors: 28643\",\"Date: 2016-12-01<br />Visitors: 31285\",\"Date: 2017-01-01<br />Visitors: 31125\",\"Date: 2017-02-01<br />Visitors: 28207\",\"Date: 2017-03-01<br />Visitors: 31443\",\"Date: 2017-04-01<br />Visitors: 33682\",\"Date: 2017-05-01<br />Visitors: 36844\",\"Date: 2017-06-01<br />Visitors: 50591\",\"Date: 2017-07-01<br />Visitors: 58349\",\"Date: 2017-08-01<br />Visitors: 43919\",\"Date: 2017-09-01<br />Visitors: 35317\",\"Date: 2017-10-01<br />Visitors: 33438\",\"Date: 2017-11-01<br />Visitors: 32527\",\"Date: 2017-12-01<br />Visitors: 33860\",\"Date: 2018-01-01<br />Visitors: 31432\",\"Date: 2018-02-01<br />Visitors: 35137\",\"Date: 2018-03-01<br />Visitors: 35832\",\"Date: 2018-04-01<br />Visitors: 41723\",\"Date: 2018-05-01<br />Visitors: 45269\",\"Date: 2018-06-01<br />Visitors: 55824\",\"Date: 2018-07-01<br />Visitors: 63476\",\"Date: 2018-08-01<br />Visitors: 49645\",\"Date: 2018-09-01<br />Visitors: 37341\",\"Date: 2018-10-01<br />Visitors: 36355\",\"Date: 2018-11-01<br />Visitors: 33356\",\"Date: 2018-12-01<br />Visitors: 33778\",\"Date: 2019-01-01<br />Visitors: 29621\",\"Date: 2019-02-01<br />Visitors: 37778\",\"Date: 2019-03-01<br />Visitors: 36769\",\"Date: 2019-04-01<br />Visitors: 40569\",\"Date: 2019-05-01<br />Visitors: 43176\",\"Date: 2019-06-01<br />Visitors: 60425\",\"Date: 2019-07-01<br />Visitors: 65554\",\"Date: 2019-08-01<br />Visitors: 51211\",\"Date: 2019-09-01<br />Visitors: 39766\",\"Date: 2019-10-01<br />Visitors: 37358\",\"Date: 2019-11-01<br />Visitors: 40535\",\"Date: 2019-12-01<br />Visitors: 34366\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":26.228310502283104,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":54.794520547945211},\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[14428.950000000001,18412.049999999999],\"tickmode\":\"array\",\"ticktext\":[\"2010\",\"2015\",\"2020\"],\"tickvals\":[14610,16436,18262],\"categoryorder\":\"array\",\"categoryarray\":[\"2010\",\"2015\",\"2020\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Date\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[13292.35,68042.649999999994],\"tickmode\":\"array\",\"ticktext\":[\"20000\",\"30000\",\"40000\",\"50000\",\"60000\"],\"tickvals\":[20000,30000,40000,50000,60000],\"categoryorder\":\"array\",\"categoryarray\":[\"20000\",\"30000\",\"40000\",\"50000\",\"60000\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Visitors\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":null,\"bordercolor\":null,\"borderwidth\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"261012c52e12\":{\"x\":{},\"y\":{},\"type\":\"scatter\"}},\"cur_data\":\"261012c52e12\",\"visdat\":{\"261012c52e12\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n## 6. Reference\n\nCredits to [Prof Kam](https://r4va.netlify.app/chap17).\n",
    "supporting": [
      "Hands-on_Ex07_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}