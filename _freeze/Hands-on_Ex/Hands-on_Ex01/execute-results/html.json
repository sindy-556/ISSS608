{
  "hash": "7844d6024aa3ef7be8dbd04db2d735e3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on Exercise 1: Working with tidyverse\"\nauthor: \"Sindy\"\ndate-modified: \"last-modified\"\nexecute:\n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\n## 1. Getting started\n\nLoading tidyverse into r environment by using the code chunk below.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, psych)\n```\n:::\n\n\n\n## 2. Importing data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_data <- read_csv(\"data/Exam_data.csv\")\n```\n:::\n\n\n\n### About the data\n\n-   Year end examination grades of a cohort of primary 3 students from a local school.\n\n-   There are a total of seven attributes. Four of them are categorical data type and the other three are in continuous data type.\n\n    -   The categorical attributes are: `ID`, `CLASS`, `GENDER` and `RACE`.\n    -   The continuous attributes are: `MATHS`, `ENGLISH` and `SCIENCE`.\n\n## 3. R Graphics VS ggplot\n\nFirst, let us compare how R Graphics, the core graphical functions of Base R and ggplot plot a simple histogram.\n\n::: panel-tabset\n### R Graphics\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(exam_data$MATHS)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n### ggplot2\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n:::\n\n## 4. Grammar of Graphics\n\nGrammar of Graphics defines the rules of structuring [mathematical and aesthetic]{style=\"color:blue\"} elements into a meaningful graph.\n\nThere are two principles in Grammar of Graphics, they are:\n\n-   Graphics = distinct layers of grammatical elements\n-   Meaningful plots through aesthetic mapping\n\nA good grammar of graphics will allow us to:\n\n1.  Gain insight into the composition of complicated graphics, and reveal unexpected connections between seemingly different graphics (Cox 1978).\n2.  Provide a strong foundation for understanding a diverse range of graphics.\n3.  Guide us on what a well-formed or correct graphic looks like.\n\n*Note: there will still be many grammatically correct but nonsensical graphics.*\n\n## 5. Essential Grammatical Elements in ggplot2: data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data) # ggplot() initializes a ggplot object.\n# output:A blank canvas\n\n\n# Aesthetic mappings\nggplot(data=exam_data, \n       aes(x= MATHS))\n# output: ggplot that includes the x-axis and the axisâ€™s label.\n```\n:::\n\n\n\n## 6. Essential Grammatical Elements in ggplot2: geom\n\nGeometric objects are the actual marks we put on a plot. Examples include:\n\n![](images/image6.png){width=\"80%\"}\n\n-   A plot must have at least one geom; there is no upper limit. You can add a geom to a plot using the **+** operator.\n\n-   For complete list, please refer to [here](https://ggplot2.tidyverse.org/reference/#section-layer-geoms).\n",
    "supporting": [
      "Hands-on_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}