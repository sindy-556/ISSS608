{
  "hash": "cef07d36487e796463d1fcf009b67172",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on Exercise 5e: Treemap Visualization with R\"\nauthor: \"Sindy\"\ndate-modified: \"last-modified\"\nexecute:\n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\n## Overview\n\nTreemaps are a visualization technique used to represent hierarchical data through nested rectangles, where the size and color of each rectangle convey different attributes. They are particularly effective for displaying proportions within categories, making it easy to compare parts of a whole at a glance.\n\n## 1. Installing and Launching R Packages\n\nYou will need the following packages. Here, we use `pacman::p_load()` for convenience:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(treemap, treemapify, tidyverse, d3treeR)\n```\n:::\n\n\n\n## 2. Data Wrangling\n\nFor this exercise, the dataset *REALIS2018.csv* is used, containing private property transaction records in **2018** from Singapore’s Urban Redevelopment Authority (URA).\n\n### 2.1 Importing the Dataset\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis2018 <- read_csv(\"data/realis2018.csv\")\n```\n:::\n\n\n\n### 2.2 Transforming the Data\n\nTreemap visualizations often require aggregated information (e.g., by project, region). Here we:\n\n- Group by *Project Name*, *Planning Region*, *Planning Area*, *Property Type*, and *Type of Sale*.\n- Compute:\n  - Total Units Sold (sum of *No. of Units*),\n  - Total Area (sum of *Area (sqm)*),\n  - Median Unit Price (median of *Unit Price ($ psm)*),\n  - Median Transacted Price (median of *Transacted Price ($)*).\n\nWe will use two key **dplyr** verbs: `group_by()` and `summarise()`.\n\n#### Without using the pipe:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Group the data\nrealis2018_grouped <- group_by(\n  realis2018, \n  `Project Name`,\n  `Planning Region`, \n  `Planning Area`, \n  `Property Type`, \n  `Type of Sale`\n)\n\n# Summarise the grouped data\nrealis2018_summarised <- summarise(\n  realis2018_grouped, \n  `Total Unit Sold` = sum(`No. of Units`, na.rm = TRUE),\n  `Total Area` = sum(`Area (sqm)`, na.rm = TRUE),\n  `Median Unit Price ($ psm)` = median(`Unit Price ($ psm)`, na.rm = TRUE), \n  `Median Transacted Price` = median(`Transacted Price ($)`, na.rm = TRUE)\n)\n```\n:::\n\n\n\n#### With the pipe:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis2018_summarised <- realis2018 %>% \n  group_by(\n    `Project Name`,\n    `Planning Region`,\n    `Planning Area`,\n    `Property Type`,\n    `Type of Sale`\n  ) %>%\n  summarise(\n    `Total Unit Sold` = sum(`No. of Units`, na.rm = TRUE),\n    `Total Area` = sum(`Area (sqm)`, na.rm = TRUE),\n    `Median Unit Price ($ psm)` = median(`Unit Price ($ psm)`, na.rm = TRUE),\n    `Median Transacted Price` = median(`Transacted Price ($)`, na.rm = TRUE)\n  )\n```\n:::\n\n\n\n## 3. Designing Treemaps with **treemap** Package\n\n### 3.1 Subset the Data (Resale Condominium)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis2018_selected <- realis2018_summarised %>%\n  filter(\n    `Property Type` == \"Condominium\", \n    `Type of Sale` == \"Resale\"\n  )\n```\n:::\n\n\n\n### 3.2 Basic Arguments in `treemap()`\n\n- `index`: defines the hierarchical structure (e.g., Region → Area → Project).\n- `vSize`: a numeric column that defines the rectangle sizes.\n- `vColor`: a numeric column that defines the rectangle colors.\n- `type`: how color values will be interpreted.\n\n#### First Attempt\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntreemap(\n  realis2018_selected,\n  index = c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n  vSize = \"Total Unit Sold\",\n  vColor = \"Median Unit Price ($ psm)\",\n  title = \"Resale Condominium by Planning Region and Area, 2018\",\n  title.legend = \"Median Unit Price (S$ per sq. m)\"\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n> Notice that without specifying `type`, **treemap** assumes `type = \"index\"`, which produces unexpected colors. We fix this below.\n\n### 3.3 Correct Color Mapping with `type = \"value\"`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntreemap(\n  realis2018_selected,\n  index = c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n  vSize = \"Total Unit Sold\",\n  vColor = \"Median Unit Price ($ psm)\",\n  type = \"value\",\n  title = \"Resale Condominium by Planning Region and Area, 2018\",\n  title.legend = \"Median Unit Price (S$ per sq. m)\"\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n### 3.4 Color Palettes\n\nWhen `type = \"value\"`, the default color palette is a **diverging** palette. You can manually choose a palette using the `palette` argument.\n\n#### Example: \"RdYlBu\"\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntreemap(\n  realis2018_selected,\n  index = c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n  vSize = \"Total Unit Sold\",\n  vColor = \"Median Unit Price ($ psm)\",\n  type = \"value\",\n  palette = \"RdYlBu\",\n  title = \"Resale Condominium by Planning Region and Area, 2018\",\n  title.legend = \"Median Unit Price (S$ per sq. m)\"\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\nBecause our values are all positive, you may not see the full gradient (e.g., no reds if all prices are above zero).\n\n### 3.5 \"manual\" Type\n\nWith `type = \"manual\"`, the data is **linearly** mapped onto the palette. A *single-hue* palette like \"Blues\" is more intuitive if all values are positive.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntreemap(\n  realis2018_selected,\n  index = c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n  vSize = \"Total Unit Sold\",\n  vColor = \"Median Unit Price ($ psm)\",\n  type = \"manual\",\n  palette = \"Blues\",\n  title = \"Resale Condominium by Planning Region and Area, 2018\",\n  title.legend = \"Median Unit Price (S$ per sq. m)\"\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n### 3.6 Treemap Layout Algorithms\n\n- **\"pivotSize\"** (default) respects the order of the data but is slightly less balanced visually.\n- **\"squarified\"** often produces more balanced aspect ratios.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntreemap(\n  realis2018_selected,\n  index = c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n  vSize = \"Total Unit Sold\",\n  vColor = \"Median Unit Price ($ psm)\",\n  type = \"manual\",\n  palette = \"Blues\",\n  algorithm = \"squarified\",\n  title = \"Resale Condominium by Planning Region and Area, 2018\",\n  title.legend = \"Median Unit Price (S$ per sq. m)\"\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n#### Using `sortID`\n\nWhen using `\"pivotSize\"`, you can specify `sortID` to control the rectangle order:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntreemap(\n  realis2018_selected,\n  index = c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n  vSize = \"Total Unit Sold\",\n  vColor = \"Median Unit Price ($ psm)\",\n  type = \"manual\",\n  palette = \"Blues\",\n  algorithm = \"pivotSize\",\n  sortID = \"Median Transacted Price\",\n  title = \"Resale Condominium by Planning Region and Area, 2018\",\n  title.legend = \"Median Unit Price (S$ per sq. m)\"\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n\n## 4. Designing Treemaps with **treemapify**\n\nThe **treemapify** package uses the **ggplot2** framework for treemaps. It provides **geom_treemap()** and additional layers like **geom_treemap_subgroup_border()** for hierarchical boundaries.\n\n### 4.1 Basic Treemap\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  data = realis2018_selected,\n  aes(\n    area = `Total Unit Sold`,\n    fill = `Median Unit Price ($ psm)`\n  )\n) + \n  geom_treemap() +\n  scale_fill_gradient(low = \"lightblue\", high = \"blue\") +\n  labs(title = \"Basic Treemap with treemapify (2018 Data)\",\n       fill = \"Median Unit Price ($ psm)\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n### 4.2 Defining a Hierarchy\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  data = realis2018_selected,\n  aes(\n    area = `Total Unit Sold`,\n    fill = `Median Unit Price ($ psm)`,\n    subgroup = `Planning Region`\n  )\n) + \n  geom_treemap() +\n  geom_treemap_subgroup_border(colour = \"grey20\", size = 2) +\n  labs(\n    title = \"Treemap Grouped by Planning Region\",\n    fill = \"Median Unit Price ($ psm)\"\n  )\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\nTo add another hierarchy level (e.g., *Planning Area*):\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  data = realis2018_selected,\n  aes(\n    area = `Total Unit Sold`,\n    fill = `Median Unit Price ($ psm)`,\n    subgroup = `Planning Region`,\n    subgroup2 = `Planning Area`\n  )\n) + \n  geom_treemap() +\n  geom_treemap_subgroup_border(colour = \"grey20\") +\n  geom_treemap_subgroup2_border(colour = \"grey40\", size = 2) +\n  labs(\n    title = \"Treemap Grouped by Planning Region & Area\",\n    fill = \"Median Unit Price ($ psm)\"\n  )\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n\n## 5. Designing Interactive Treemaps with **d3treeR**\n\n### 5.1 Building the Interactive Treemap\n\nFirst, create a treemap object with **treemap**:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm <- treemap(\n  realis2018_summarised,\n  index = c(\"Planning Region\", \"Planning Area\"),\n  vSize = \"Total Unit Sold\",\n  vColor = \"Median Unit Price ($ psm)\",\n  type = \"value\",\n  title = \"Private Residential Property Sold, 2018\",\n  title.legend = \"Median Unit Price (S$ per sq. m)\"\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\nThen convert it to an interactive visualization with `d3tree()`:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd3tree(\n  tm,\n  rootname = \"Singapore\"\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"d3tree html-widget html-fill-item\" id=\"htmlwidget-8dc195480de8af7f1e7e\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-8dc195480de8af7f1e7e\">{\"x\":{\"data\":{\"name\":\"Singapore\",\"id\":1,\"size\":null,\"children\":[{\"name\":\"Central Region\",\"color\":\"#006837\",\"h\":1,\"id\":2,\"size\":10825,\"stdErr\":10825,\"vColor\":20978846.5,\"vColorValue\":20978846.5,\"vSize\":10825,\"w\":0.4664942900237018,\"x0\":0,\"y0\":0,\"children\":[{\"name\":\"Bishan\",\"color\":\"#D9EF8B\",\"h\":0.2165611047442029,\"id\":3,\"size\":698,\"stdErr\":698,\"vColor\":749211.5,\"vColorValue\":749211.5,\"vSize\":698,\"w\":0.1388971682283426,\"x0\":0.3275971217953593,\"y0\":0.3973880869417094},{\"name\":\"Bukit Merah\",\"color\":\"#DCF090\",\"h\":0.2165611047442029,\"id\":4,\"size\":708,\"stdErr\":708,\"vColor\":689448,\"vColorValue\":689448,\"vSize\":708,\"w\":0.1408870990052529,\"x0\":0.1867100227901064,\"y0\":0.3973880869417094},{\"name\":\"Bukit Timah\",\"color\":\"#219B51\",\"h\":0.2702761291218809,\"id\":5,\"size\":1171,\"stdErr\":1171,\"vColor\":2823552.5,\"vColorValue\":2823552.5,\"vSize\":1171,\"w\":0.1867100227901064,\"x0\":0,\"y0\":0.3436730625640314},{\"name\":\"Downtown Core\",\"color\":\"#E0F295\",\"h\":0.225794694775928,\"id\":6,\"size\":439,\"stdErr\":439,\"vColor\":570894,\"vColorValue\":570894,\"vSize\":439,\"w\":0.08378556716830476,\"x0\":0.3035036878329677,\"y0\":0.1715933921657813},{\"name\":\"Geylang\",\"color\":\"#66BD63\",\"h\":0.3860508083140878,\"id\":7,\"size\":1489,\"stdErr\":1489,\"vColor\":2140814.5,\"vColorValue\":2140814.5,\"vSize\":1489,\"w\":0.1662144048445302,\"x0\":0,\"y0\":0.6139491916859122},{\"name\":\"Kallang\",\"color\":\"#A6D96A\",\"h\":0.1747216308670059,\"id\":8,\"size\":757,\"stdErr\":757,\"vColor\":1415268,\"vColorValue\":1415268,\"vSize\":757,\"w\":0.1867100227901064,\"x0\":0,\"y0\":0.1689514316970255},{\"name\":\"Marine Parade\",\"color\":\"#ABDB6D\",\"h\":0.1807986653680943,\"id\":9,\"size\":490,\"stdErr\":490,\"vColor\":1397529.5,\"vColorValue\":1397529.5,\"vSize\":490,\"w\":0.1167936650428614,\"x0\":0.1867100227901064,\"y0\":0},{\"name\":\"Museum\",\"color\":\"#FBFDB9\",\"h\":0.0351116940585223,\"id\":10,\"size\":28,\"stdErr\":28,\"vColor\":135893,\"vColorValue\":135893,\"vSize\":28,\"w\":0.03436565888114059,\"x0\":0.4321286311425612,\"y0\":0.02884174869092903},{\"name\":\"Newton\",\"color\":\"#B0DD70\",\"h\":0.1715933921657813,\"id\":11,\"size\":268,\"stdErr\":268,\"vColor\":1306816,\"vColorValue\":1306816,\"vSize\":268,\"w\":0.06730582648246029,\"x0\":0.3035036878329677,\"y0\":0},{\"name\":\"Novena\",\"color\":\"#40AA59\",\"h\":0.1689514316970255,\"id\":12,\"size\":732,\"stdErr\":732,\"vColor\":2483944.5,\"vColorValue\":2483944.5,\"vSize\":732,\"w\":0.1867100227901064,\"x0\":0,\"y0\":0},{\"name\":\"Orchard\",\"color\":\"#F3FAAF\",\"h\":0.06395344274945129,\"id\":13,\"size\":42,\"stdErr\":42,\"vColor\":251834.5,\"vColorValue\":251834.5,\"vSize\":42,\"w\":0.02830113084329224,\"x0\":0.403827500299269,\"y0\":0},{\"name\":\"Outram\",\"color\":\"#FBFDB9\",\"h\":0.02884174869092899,\"id\":14,\"size\":23,\"stdErr\":23,\"vColor\":130671,\"vColorValue\":130671,\"vSize\":23,\"w\":0.03436565888114063,\"x0\":0.4321286311425612,\"y0\":0},{\"name\":\"Queenstown\",\"color\":\"#C9E881\",\"h\":0.3860508083140878,\"id\":15,\"size\":1432,\"stdErr\":1432,\"vColor\":953979.5,\"vColorValue\":953979.5,\"vSize\":1432,\"w\":0.1598515968686147,\"x0\":0.1662144048445302,\"y0\":0.6139491916859122},{\"name\":\"River Valley\",\"color\":\"#72C264\",\"h\":0.216589421573615,\"id\":16,\"size\":587,\"stdErr\":587,\"vColor\":1998014,\"vColorValue\":1998014,\"vSize\":587,\"w\":0.1167936650428614,\"x0\":0.1867100227901064,\"y0\":0.1807986653680943},{\"name\":\"Rochor\",\"color\":\"#E4F39A\",\"h\":0.1076399494163301,\"id\":17,\"size\":132,\"stdErr\":132,\"vColor\":520971,\"vColorValue\":520971,\"vSize\":132,\"w\":0.05284682173009263,\"x0\":0.3708095143154281,\"y0\":0.06395344274945132},{\"name\":\"Singapore River\",\"color\":\"#ECF7A4\",\"h\":0.10763994941633,\"id\":18,\"size\":107,\"stdErr\":107,\"vColor\":378001,\"vColorValue\":378001,\"vSize\":107,\"w\":0.04283795397818115,\"x0\":0.4236563360455207,\"y0\":0.06395344274945133},{\"name\":\"Southern Islands\",\"color\":\"#F7FBB4\",\"h\":0.06395344274945129,\"id\":19,\"size\":49,\"stdErr\":49,\"vColor\":173903,\"vColorValue\":173903,\"vSize\":49,\"w\":0.03301798598384095,\"x0\":0.3708095143154281,\"y0\":0},{\"name\":\"Tanglin\",\"color\":\"#66BD63\",\"h\":0.225794694775928,\"id\":20,\"size\":415,\"stdErr\":415,\"vColor\":2187332,\"vColorValue\":2187332,\"vSize\":415,\"w\":0.07920503502242932,\"x0\":0.3872892550012725,\"y0\":0.1715933921657814},{\"name\":\"Toa Payoh\",\"color\":\"#DCF090\",\"h\":0.3860508083140878,\"id\":21,\"size\":1258,\"stdErr\":1258,\"vColor\":670769,\"vColorValue\":670769,\"vSize\":1258,\"w\":0.1404282883105568,\"x0\":0.326066001713145,\"y0\":0.6139491916859122}]},{\"name\":\"East Region\",\"color\":\"#006837\",\"h\":0.6954765751211631,\"id\":22,\"size\":3775,\"stdErr\":3775,\"vColor\":4616987.5,\"vColorValue\":4616987.5,\"vSize\":3775,\"w\":0.2339122015285163,\"x0\":0.7660877984714837,\"y0\":0.3045234248788369,\"children\":[{\"name\":\"Bedok\",\"color\":\"#006837\",\"h\":0.3334602916474981,\"id\":23,\"size\":1810,\"stdErr\":1810,\"vColor\":3529868.5,\"vColorValue\":3529868.5,\"vSize\":1810,\"w\":0.2339122015285163,\"x0\":0.7660877984714837,\"y0\":0.666539708352502},{\"name\":\"Changi\",\"color\":\"#FFFFBF\",\"h\":0.001895373211904017,\"id\":24,\"size\":5,\"stdErr\":5,\"vColor\":20564,\"vColorValue\":20564,\"vSize\":5,\"w\":0.113682520335742,\"x0\":0.886317479664258,\"y0\":0.3045234248788369},{\"name\":\"Pasir Ris\",\"color\":\"#DCF090\",\"h\":0.360120910261761,\"id\":25,\"size\":950,\"stdErr\":950,\"vColor\":669171,\"vColorValue\":669171,\"vSize\":950,\"w\":0.113682520335742,\"x0\":0.886317479664258,\"y0\":0.306418798090741},{\"name\":\"Tampines\",\"color\":\"#ECF7A4\",\"h\":0.362016283473665,\"id\":26,\"size\":1010,\"stdErr\":1010,\"vColor\":397384,\"vColorValue\":397384,\"vSize\":1010,\"w\":0.1202296811927743,\"x0\":0.7660877984714837,\"y0\":0.304523424878837}]},{\"name\":\"North East Region\",\"color\":\"#006837\",\"h\":0.6954765751211631,\"id\":27,\"size\":4835,\"stdErr\":4835,\"vColor\":4208661,\"vColorValue\":4208661,\"vSize\":4835,\"w\":0.2995935084477819,\"x0\":0.4664942900237018,\"y0\":0.3045234248788369,\"children\":[{\"name\":\"Ang Mo Kio\",\"color\":\"#DCF090\",\"h\":0.1240051577145652,\"id\":28,\"size\":316,\"stdErr\":316,\"vColor\":640722.5,\"vColorValue\":640722.5,\"vSize\":316,\"w\":0.1098160354391928,\"x0\":0.656271763032291,\"y0\":0.427351318437884},{\"name\":\"Hougang\",\"color\":\"#99D368\",\"h\":0.4486435238475507,\"id\":29,\"size\":1875,\"stdErr\":1875,\"vColor\":1617014.5,\"vColorValue\":1617014.5,\"vSize\":1875,\"w\":0.1801019007180478,\"x0\":0.4664942900237018,\"y0\":0.5513564761524492},{\"name\":\"Punggol\",\"color\":\"#FBFDB9\",\"h\":0.1228278935590471,\"id\":30,\"size\":313,\"stdErr\":313,\"vColor\":126110,\"vColorValue\":126110,\"vSize\":313,\"w\":0.1098160354391928,\"x0\":0.656271763032291,\"y0\":0.3045234248788369},{\"name\":\"Sengkang\",\"color\":\"#EFF8AA\",\"h\":0.4486435238475507,\"id\":31,\"size\":1244,\"stdErr\":1244,\"vColor\":348343.5,\"vColorValue\":348343.5,\"vSize\":1244,\"w\":0.1194916077297341,\"x0\":0.6465961907417496,\"y0\":0.5513564761524492},{\"name\":\"Serangoon\",\"color\":\"#A6D96A\",\"h\":0.2468330512736124,\"id\":32,\"size\":1087,\"stdErr\":1087,\"vColor\":1476470.5,\"vColorValue\":1476470.5,\"vSize\":1087,\"w\":0.1897774730085891,\"x0\":0.4664942900237018,\"y0\":0.3045234248788368}]},{\"name\":\"North Region\",\"color\":\"#CEEA84\",\"h\":0.3045234248788368,\"id\":33,\"size\":1117,\"stdErr\":1117,\"vColor\":866745,\"vColorValue\":866745,\"vSize\":1117,\"w\":0.1580705246799801,\"x0\":0.8419294753200199,\"y0\":0,\"children\":[{\"name\":\"Mandai\",\"color\":\"#FFFFBF\",\"h\":0.02952717240970038,\"id\":34,\"size\":29,\"stdErr\":29,\"vColor\":62025,\"vColorValue\":62025,\"vSize\":29,\"w\":0.04232476595303115,\"x0\":0.9503778606067911,\"y0\":0},{\"name\":\"Sembawang\",\"color\":\"#F3FAAF\",\"h\":0.1968360902081649,\"id\":35,\"size\":286,\"stdErr\":286,\"vColor\":244075,\"vColorValue\":244075,\"vSize\":286,\"w\":0.06261519398680651,\"x0\":0.9373848060131935,\"y0\":0.1076873346706719},{\"name\":\"Sungei Kadut\",\"color\":\"#FFFFBF\",\"h\":0.02952717240970027,\"id\":36,\"size\":5,\"stdErr\":5,\"vColor\":24359,\"vColorValue\":24359,\"vSize\":5,\"w\":0.007297373440177785,\"x0\":0.9927026265598221,\"y0\":0},{\"name\":\"Woodlands\",\"color\":\"#F7FBB4\",\"h\":0.1076873346706719,\"id\":37,\"size\":271,\"stdErr\":271,\"vColor\":164195,\"vColorValue\":164195,\"vSize\":271,\"w\":0.1084483852867712,\"x0\":0.8419294753200199,\"y0\":0},{\"name\":\"Yishun\",\"color\":\"#EFF8AA\",\"h\":0.1968360902081649,\"id\":38,\"size\":436,\"stdErr\":436,\"vColor\":313496,\"vColorValue\":313496,\"vSize\":436,\"w\":0.09545533069317358,\"x0\":0.8419294753200199,\"y0\":0.1076873346706719},{\"name\":\"YISHUN\",\"color\":\"#FFFFBF\",\"h\":0.07816016226097153,\"id\":39,\"size\":90,\"stdErr\":90,\"vColor\":58595,\"vColorValue\":58595,\"vSize\":90,\"w\":0.04962213939320893,\"x0\":0.9503778606067911,\"y0\":0.02952717240970034}]},{\"name\":\"West Region\",\"color\":\"#79C565\",\"h\":0.3045234248788369,\"id\":40,\"size\":2653,\"stdErr\":2653,\"vColor\":1919890.5,\"vColorValue\":1919890.5,\"vSize\":2653,\"w\":0.3754351852963181,\"x0\":0.4664942900237018,\"y0\":0,\"children\":[{\"name\":\"Bukit Batok\",\"color\":\"#E0F295\",\"h\":0.2045358948206935,\"id\":41,\"size\":583,\"stdErr\":583,\"vColor\":618812.5,\"vColorValue\":618812.5,\"vSize\":583,\"w\":0.1228336754003785,\"x0\":0.6316404872497866,\"y0\":0.09998753005814345},{\"name\":\"Bukit Panjang\",\"color\":\"#ECF7A4\",\"h\":0.09998753005814345,\"id\":42,\"size\":285,\"stdErr\":285,\"vColor\":374543.5,\"vColorValue\":374543.5,\"vSize\":285,\"w\":0.1228336754003785,\"x0\":0.6316404872497866,\"y0\":0},{\"name\":\"Choa Chu Kang\",\"color\":\"#FBFDB9\",\"h\":0.1320587020510166,\"id\":43,\"size\":268,\"stdErr\":268,\"vColor\":125114,\"vColorValue\":125114,\"vSize\":268,\"w\":0.08745531266985472,\"x0\":0.7544741626501652,\"y0\":0.03498570091650066},{\"name\":\"Clementi\",\"color\":\"#E4F39A\",\"h\":0.3045234248788369,\"id\":44,\"size\":1167,\"stdErr\":1167,\"vColor\":531398.5,\"vColorValue\":531398.5,\"vSize\":1167,\"w\":0.1651461972260849,\"x0\":0.4664942900237018,\"y0\":0},{\"name\":\"Jurong East\",\"color\":\"#FFFFBF\",\"h\":0.03498570091650072,\"id\":45,\"size\":71,\"stdErr\":71,\"vColor\":65122,\"vColorValue\":65122,\"vSize\":71,\"w\":0.08745531266985475,\"x0\":0.7544741626501652,\"y0\":0},{\"name\":\"Jurong West\",\"color\":\"#F7FBB4\",\"h\":0.1374790219113196,\"id\":46,\"size\":279,\"stdErr\":279,\"vColor\":204900,\"vColorValue\":204900,\"vSize\":279,\"w\":0.08745531266985472,\"x0\":0.7544741626501652,\"y0\":0.1670444029675173}]}]},\"meta\":{\"type\":\"value\",\"vSize\":\"Total Unit Sold\",\"vColor\":\"Median Unit Price ($ psm)\",\"stdErr\":\"Total Unit Sold\",\"algorithm\":\"pivotSize\",\"vpCoorX\":[0.02812148481439815,0.9718785151856019],\"vpCoorY\":[0.1716850393700787,0.9103149606299213],\"aspRatio\":1.788798157900348,\"range\":[0,3500000],\"mapping\":[null,null,null],\"draw\":true},\"options\":{\"id\":\"id\",\"celltext\":\"name\",\"valueField\":\"size\"}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n## 6. More exploration\n\n### 6.1 Adding Labels Inside Treemap (treemapify)\n\nYou can add text labels to each rectangle using `geom_treemap_text()`:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  data = realis2018_selected,\n  aes(\n    area = `Total Unit Sold`,\n    fill = `Median Unit Price ($ psm)`,\n    label = `Planning Area`\n  )\n) + \n  geom_treemap() +\n  geom_treemap_text(\n    colour = \"white\",\n    place = \"centre\",\n    grow = TRUE\n  ) +\n  scale_fill_gradient(low = \"lightblue\", high = \"blue\") +\n  labs(\n    title = \"Treemap with Labels (Planning Area)\",\n    fill = \"Median Unit Price ($ psm)\"\n  )\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n### 6.2 Filtering for Top N Areas\n\nSuppose you only want to visualize the **top 10** Planning Areas by *Total Unit Sold*:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop10_areas <- realis2018_selected %>%\n  group_by(`Planning Area`) %>%\n  summarise(total_unit_sold = sum(`Total Unit Sold`)) %>%\n  slice_max(order_by = total_unit_sold, n = 10) %>%\n  pull(`Planning Area`)\n\ntop10_data <- realis2018_selected %>%\n  filter(`Planning Area` %in% top10_areas)\n\nggplot(\n  data = top10_data,\n  aes(\n    area = `Total Unit Sold`,\n    fill = `Median Unit Price ($ psm)`,\n    label = `Planning Area`\n  )\n) +\n  geom_treemap() +\n  geom_treemap_text(colour = \"white\", place = \"centre\", grow = TRUE) +\n  labs(title = \"Top 10 Planning Areas by Total Unit Sold (2018)\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n### 6.3 Comparing Two Property Types Side by Side\n\nYou can create two treemaps and place them side by side using **patchwork** or **cowplot**. For instance, comparing *Condominium* vs. *Executive Condominium*:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(patchwork)\n\ncondo_data <- realis2018_summarised %>%\n  filter(`Property Type` == \"Condominium\")\n\nec_data <- realis2018_summarised %>%\n  filter(`Property Type` == \"Executive Condominium\")\n\nplot_condo <- ggplot(\n  data = condo_data,\n  aes(area = `Total Unit Sold`, fill = `Median Unit Price ($ psm)`)\n) + \n  geom_treemap() +\n  labs(title = \"Condominium\")\n\nplot_ec <- ggplot(\n  data = ec_data,\n  aes(area = `Total Unit Sold`, fill = `Median Unit Price ($ psm)`)\n) + \n  geom_treemap() +\n  labs(title = \"Executive Condominium\")\n\nplot_condo\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_ec\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n\n### 6.4 Highlighting Specific Regions (Conditional Coloring)\n\nYou might want to color certain regions differently if they meet certain criteria, e.g., a *Median Unit Price* above \\$20,000 psm:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis2018_selected <- realis2018_selected %>%\n  mutate(\n    PriceCategory = if_else(\n      `Median Unit Price ($ psm)` > 20000, \n      \"High Price\", \n      \"Others\"\n    )\n  )\n\nggplot(\n  data = realis2018_selected,\n  aes(\n    area = `Total Unit Sold`,\n    fill = PriceCategory\n  )\n) + \n  geom_treemap() +\n  scale_fill_manual(values = c(\"High Price\" = \"red\", \"Others\" = \"grey70\")) +\n  labs(\n    title = \"Conditional Coloring: High vs. Other Price Levels\",\n    fill = \"Price Category\"\n  )\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n\n## 7. Reference\nCredits to [Prof Kam](https://r4va.netlify.app/chap16).",
    "supporting": [
      "Hands-on_Ex05e_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../site_libs/d3-3.5.5/d3.min.js\"></script>\n<link href=\"../site_libs/d3tree-0.1/d3tree.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/d3tree-binding-0.1/d3tree.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}