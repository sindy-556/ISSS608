---
title: "Take-home Exercise 1: Examining Heart Attack Risk in Japan"
author: "Sindy"
date-modified: "last-modified"
output:
  html_document:
    css: styles.css
execute:
  echo: true
  eval: true
  warning: false
  freeze: true
---

## Overview

The Heart Attack in Japan dataset is a research-centric compilation designed to investigate the epidemiology of heart attacks across different segments of the Japanese population. Japan, with its rapidly aging demographic and high standard of healthcare, presents a unique context where understanding the interplay between lifestyle, clinical parameters, and heart attack occurrence is critical.

### Our task

In this exercise we will be: 

- Examining Heart Attack Occurrence: Analyze the distribution and determinants of heart attack events across the dataset. 
- Conducting Demographic Analysis: Investigate how age, gender, and region contribute to heart attack risk, distinguishing between younger and older cohorts.
- Exploring Health Metrics: Visualize relationships between clinical indicators (e.g., BMI, blood pressure, cholesterol) and heart attack occurrence. 
- Assessing Lifestyle Factors: Evaluate the impact of lifestyle variables such as smoking history, physical activity, diet quality, alcohol consumption, and stress levels on heart health.

## Getting started

### Load packages

We load the following R packages using the `pacman::p_load()` function:

```{r}
pacman::p_load(tidyverse, readxl, SmartEDA, easystats, gtsummary, reshape2, ggstatsplot)
```

This dataset contains information about heart attack occurrences in Japan, focusing on various demographic and health-related factors.

### Import data
```{r}
heart_data <- read_csv("./data/japan_heart_attack_dataset.csv")
```

### Data pre-processing

#### Glimpse of data
Using the `glimpse()` function, we see that the dataset consists of 30,000 rows and 32 columns. The output displays the column names, their data types, and the first few entries for each variable. Additionally, there are 15 extra columns (Extra_Column_1 to Extra_Column_15) which are not clearly defined.

```{r}
glimpse(heart_data)
```

The following provides an overview of the Japan Heart Attack dataset using the `ExpData()` function, summarizing both overall and variable-level details. 

::: panel-tabset
#### Overall data summary

```{r}
summary1 <- heart_data %>%
  ExpData(type = 1)

# Display the summary (further customization possible)
summary1
```

#### Variable level summary

```{r}
summary2 <- heart_data %>%
  ExpData(type = 2)

# Display the summary (further customization possible)
summary2
```

:::

### Convert categorical variables to factors

From the overview above, we see that the dataset contains no missing values, and the categorical variables have a maximum of 4 unique values. Converting these variables into factors ensures they are correctly treated as categorical data during analysis and visualization.

```{r}
# Convert selected categorical variables into factors
heart_data <- heart_data %>%
  mutate(
    Gender = as.factor(Gender),
    Region = as.factor(Region),
    Smoking_History = as.factor(Smoking_History),
    Diabetes_History = as.factor(Diabetes_History),
    Hypertension_History = as.factor(Hypertension_History),
    Physical_Activity = as.factor(Physical_Activity),
    Diet_Quality = as.factor(Diet_Quality),
    Alcohol_Consumption = as.factor(Alcohol_Consumption),
    Family_History = as.factor(Family_History),
    Heart_Attack_Occurrence = as.factor(Heart_Attack_Occurrence)
  )
```

#### Drop extra columns

```{r}
#| fig-width: 12
#| fig-height: 10

# Select only the Extra_Columns and the outcome variable
extra_data <- heart_data %>%
  select(starts_with("Extra_Column_"), Heart_Attack_Occurrence)

# Reshape to long format
extra_data_long <- melt(extra_data, id.vars = "Heart_Attack_Occurrence")

# Create boxplots comparing each Extra_Column by Heart_Attack_Occurrence
ggplot(extra_data_long, aes(x = Heart_Attack_Occurrence, y = value)) +
  geom_boxplot() +
  facet_wrap(~ variable, scales = "free") +
  labs(
    title = "Distribution of Extra Columns by Heart Attack Occurrence",
    x = "Heart Attack Occurrence",
    y = "Value"
  )
```
Since these variables do not appear to vary by heart attack status, they are unlikely to provide useful information for any downstream analysis (e.g., modeling, hypothesis testing). Dropping them will simplify the dataset and help focus on variables that do relate to heart attack risk. We can drop the Extra Columns with the following code:
```{r}
heart_data <- heart_data %>%
  select(-starts_with("Extra_Column_"))
```

